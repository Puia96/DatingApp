/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';
import { NgxGalleryActionComponent } from './ngx-gallery-action.component';
import { NgxGalleryArrowsComponent } from './ngx-gallery-arrows.component';
import { NgxGalleryBulletsComponent } from './ngx-gallery-bullets.component';
import { NgxGalleryImageComponent } from './ngx-gallery-image.component';
import { NgxGalleryPreviewComponent } from './ngx-gallery-preview.component';
import { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails.component';
import { NgxGalleryComponent } from './ngx-gallery.component';
export { NgxGalleryActionComponent } from './ngx-gallery-action.component';
export { NgxGalleryAction } from './ngx-gallery-action.model';
export { NgxGalleryAnimation } from './ngx-gallery-animation.model';
export { NgxGalleryArrowsComponent } from './ngx-gallery-arrows.component';
export { NgxGalleryBulletsComponent } from './ngx-gallery-bullets.component';
export { NgxGalleryHelperService } from './ngx-gallery-helper.service';
export { NgxGalleryImageSize } from './ngx-gallery-image-size.model';
export { NgxGalleryImageComponent } from './ngx-gallery-image.component';
export { NgxGalleryImage } from './ngx-gallery-image.model';
export { NgxGalleryLayout } from './ngx-gallery-layout.model';
export { NgxGalleryOptions } from './ngx-gallery-options.model';
export { NgxGalleryOrder } from './ngx-gallery-order.model';
export { NgxGalleryOrderedImage } from './ngx-gallery-ordered-image.model';
export { NgxGalleryPreviewComponent } from './ngx-gallery-preview.component';
export { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails.component';
export { NgxGalleryComponent } from './ngx-gallery.component';
export class CustomHammerConfig extends HammerGestureConfig {
    constructor() {
        super(...arguments);
        this.overrides = (/** @type {?} */ ({
            pinch: { enable: false },
            rotate: { enable: false }
        }));
    }
}
if (false) {
    /** @type {?} */
    CustomHammerConfig.prototype.overrides;
}
export class NgxGalleryModule {
}
NgxGalleryModule.decorators = [
    { type: NgModule, args: [{
                imports: [CommonModule],
                declarations: [
                    NgxGalleryActionComponent,
                    NgxGalleryArrowsComponent,
                    NgxGalleryBulletsComponent,
                    NgxGalleryImageComponent,
                    NgxGalleryThumbnailsComponent,
                    NgxGalleryPreviewComponent,
                    NgxGalleryComponent
                ],
                exports: [NgxGalleryComponent],
                providers: [{ provide: HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWdhbGxlcnkubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5vbWFkcmVzZXJ2YXRpb25zL25neC1nYWxsZXJ5LyIsInNvdXJjZXMiOlsibGliL25neC1nYWxsZXJ5Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDdkYsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDM0UsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDM0UsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDN0UsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDekUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDN0UsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDbkYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFOUQsMENBQWMsZ0NBQWdDLENBQUM7QUFDL0MsaUNBQWMsNEJBQTRCLENBQUM7QUFDM0Msb0NBQWMsK0JBQStCLENBQUM7QUFDOUMsMENBQWMsZ0NBQWdDLENBQUM7QUFDL0MsMkNBQWMsaUNBQWlDLENBQUM7QUFDaEQsd0NBQWMsOEJBQThCLENBQUM7QUFDN0Msb0NBQWMsZ0NBQWdDLENBQUM7QUFDL0MseUNBQWMsK0JBQStCLENBQUM7QUFDOUMsZ0NBQWMsMkJBQTJCLENBQUM7QUFDMUMsaUNBQWMsNEJBQTRCLENBQUM7QUFDM0Msa0NBQWMsNkJBQTZCLENBQUM7QUFDNUMsZ0NBQWMsMkJBQTJCLENBQUM7QUFDMUMsdUNBQWMsbUNBQW1DLENBQUM7QUFDbEQsMkNBQWMsaUNBQWlDLENBQUM7QUFDaEQsOENBQWMsb0NBQW9DLENBQUM7QUFDbkQsb0NBQWMseUJBQXlCLENBQUM7QUFFeEMsTUFBTSxPQUFPLGtCQUFtQixTQUFRLG1CQUFtQjtJQUEzRDs7UUFDRSxjQUFTLEdBQUcsbUJBQUE7WUFDVixLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFO1lBQ3hCLE1BQU0sRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUU7U0FDMUIsRUFBTyxDQUFDO0lBQ1gsQ0FBQztDQUFBOzs7SUFKQyx1Q0FHUzs7QUFpQlgsTUFBTSxPQUFPLGdCQUFnQjs7O1lBZDVCLFFBQVEsU0FBQztnQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUM7Z0JBQ3ZCLFlBQVksRUFBRTtvQkFDWix5QkFBeUI7b0JBQ3pCLHlCQUF5QjtvQkFDekIsMEJBQTBCO29CQUMxQix3QkFBd0I7b0JBQ3hCLDZCQUE2QjtvQkFDN0IsMEJBQTBCO29CQUMxQixtQkFBbUI7aUJBQ3BCO2dCQUNELE9BQU8sRUFBRSxDQUFDLG1CQUFtQixDQUFDO2dCQUM5QixTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxRQUFRLEVBQUUsa0JBQWtCLEVBQUUsQ0FBQzthQUM5RSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSGFtbWVyR2VzdHVyZUNvbmZpZywgSEFNTUVSX0dFU1RVUkVfQ09ORklHIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQgeyBOZ3hHYWxsZXJ5QWN0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9uZ3gtZ2FsbGVyeS1hY3Rpb24uY29tcG9uZW50JztcbmltcG9ydCB7IE5neEdhbGxlcnlBcnJvd3NDb21wb25lbnQgfSBmcm9tICcuL25neC1nYWxsZXJ5LWFycm93cy5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmd4R2FsbGVyeUJ1bGxldHNDb21wb25lbnQgfSBmcm9tICcuL25neC1nYWxsZXJ5LWJ1bGxldHMuY29tcG9uZW50JztcbmltcG9ydCB7IE5neEdhbGxlcnlJbWFnZUNvbXBvbmVudCB9IGZyb20gJy4vbmd4LWdhbGxlcnktaW1hZ2UuY29tcG9uZW50JztcbmltcG9ydCB7IE5neEdhbGxlcnlQcmV2aWV3Q29tcG9uZW50IH0gZnJvbSAnLi9uZ3gtZ2FsbGVyeS1wcmV2aWV3LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOZ3hHYWxsZXJ5VGh1bWJuYWlsc0NvbXBvbmVudCB9IGZyb20gJy4vbmd4LWdhbGxlcnktdGh1bWJuYWlscy5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmd4R2FsbGVyeUNvbXBvbmVudCB9IGZyb20gJy4vbmd4LWdhbGxlcnkuY29tcG9uZW50JztcblxuZXhwb3J0ICogZnJvbSAnLi9uZ3gtZ2FsbGVyeS1hY3Rpb24uY29tcG9uZW50JztcbmV4cG9ydCAqIGZyb20gJy4vbmd4LWdhbGxlcnktYWN0aW9uLm1vZGVsJztcbmV4cG9ydCAqIGZyb20gJy4vbmd4LWdhbGxlcnktYW5pbWF0aW9uLm1vZGVsJztcbmV4cG9ydCAqIGZyb20gJy4vbmd4LWdhbGxlcnktYXJyb3dzLmNvbXBvbmVudCc7XG5leHBvcnQgKiBmcm9tICcuL25neC1nYWxsZXJ5LWJ1bGxldHMuY29tcG9uZW50JztcbmV4cG9ydCAqIGZyb20gJy4vbmd4LWdhbGxlcnktaGVscGVyLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9uZ3gtZ2FsbGVyeS1pbWFnZS1zaXplLm1vZGVsJztcbmV4cG9ydCAqIGZyb20gJy4vbmd4LWdhbGxlcnktaW1hZ2UuY29tcG9uZW50JztcbmV4cG9ydCAqIGZyb20gJy4vbmd4LWdhbGxlcnktaW1hZ2UubW9kZWwnO1xuZXhwb3J0ICogZnJvbSAnLi9uZ3gtZ2FsbGVyeS1sYXlvdXQubW9kZWwnO1xuZXhwb3J0ICogZnJvbSAnLi9uZ3gtZ2FsbGVyeS1vcHRpb25zLm1vZGVsJztcbmV4cG9ydCAqIGZyb20gJy4vbmd4LWdhbGxlcnktb3JkZXIubW9kZWwnO1xuZXhwb3J0ICogZnJvbSAnLi9uZ3gtZ2FsbGVyeS1vcmRlcmVkLWltYWdlLm1vZGVsJztcbmV4cG9ydCAqIGZyb20gJy4vbmd4LWdhbGxlcnktcHJldmlldy5jb21wb25lbnQnO1xuZXhwb3J0ICogZnJvbSAnLi9uZ3gtZ2FsbGVyeS10aHVtYm5haWxzLmNvbXBvbmVudCc7XG5leHBvcnQgKiBmcm9tICcuL25neC1nYWxsZXJ5LmNvbXBvbmVudCc7XG5cbmV4cG9ydCBjbGFzcyBDdXN0b21IYW1tZXJDb25maWcgZXh0ZW5kcyBIYW1tZXJHZXN0dXJlQ29uZmlnIHtcbiAgb3ZlcnJpZGVzID0ge1xuICAgIHBpbmNoOiB7IGVuYWJsZTogZmFsc2UgfSxcbiAgICByb3RhdGU6IHsgZW5hYmxlOiBmYWxzZSB9XG4gIH0gYXMgYW55O1xufVxuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgTmd4R2FsbGVyeUFjdGlvbkNvbXBvbmVudCxcbiAgICBOZ3hHYWxsZXJ5QXJyb3dzQ29tcG9uZW50LFxuICAgIE5neEdhbGxlcnlCdWxsZXRzQ29tcG9uZW50LFxuICAgIE5neEdhbGxlcnlJbWFnZUNvbXBvbmVudCxcbiAgICBOZ3hHYWxsZXJ5VGh1bWJuYWlsc0NvbXBvbmVudCxcbiAgICBOZ3hHYWxsZXJ5UHJldmlld0NvbXBvbmVudCxcbiAgICBOZ3hHYWxsZXJ5Q29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtOZ3hHYWxsZXJ5Q29tcG9uZW50XSxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBIQU1NRVJfR0VTVFVSRV9DT05GSUcsIHVzZUNsYXNzOiBDdXN0b21IYW1tZXJDb25maWcgfV1cbn0pXG5leHBvcnQgY2xhc3MgTmd4R2FsbGVyeU1vZHVsZSB7fVxuIl19