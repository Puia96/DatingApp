{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@nomadreservations/ngx-gallery/lib/ngx-gallery-action.component.ts","ng://@nomadreservations/ngx-gallery/lib/ngx-gallery-animation.model.ts","ng://@nomadreservations/ngx-gallery/lib/ngx-gallery-arrows.component.ts","ng://@nomadreservations/ngx-gallery/lib/ngx-gallery-bullets.component.ts","ng://@nomadreservations/ngx-gallery/lib/ngx-gallery-image-size.model.ts","ng://@nomadreservations/ngx-gallery/lib/ngx-gallery-helper.service.ts","ng://@nomadreservations/ngx-gallery/lib/ngx-gallery-image.component.ts","ng://@nomadreservations/ngx-gallery/lib/ngx-gallery-image.model.ts","ng://@nomadreservations/ngx-gallery/lib/ngx-gallery-layout.model.ts","ng://@nomadreservations/ngx-gallery/lib/ngx-gallery-order.model.ts","ng://@nomadreservations/ngx-gallery/lib/ngx-gallery-action.model.ts","ng://@nomadreservations/ngx-gallery/lib/ngx-gallery-options.model.ts","ng://@nomadreservations/ngx-gallery/lib/ngx-gallery-ordered-image.model.ts","ng://@nomadreservations/ngx-gallery/lib/ngx-gallery-preview.component.ts","ng://@nomadreservations/ngx-gallery/lib/ngx-gallery-thumbnails.component.ts","ng://@nomadreservations/ngx-gallery/lib/ngx-gallery.component.ts","ng://@nomadreservations/ngx-gallery/lib/ngx-gallery.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","NgxGalleryActionComponent","this","disabled","titleText","clicked","EventEmitter","prototype","handleClick","event","emit","stopPropagation","preventDefault","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","Input","Output","NgxGalleryAnimation","Fade","Slide","Rotate","Zoom","NgxGalleryArrowsComponent","prevClick","nextClick","handlePrevClick","handleNextClick","NgxGalleryBulletsComponent","active","changed","getBullets","count","handleChange","index","NgxGalleryImageSize","Cover","Contain","NgxGalleryHelperService","renderer","swipeHandlers","Map","listenSwipeLeft","manageSwipe","status","element","id","nextHandler","prevHandler","handlers","getSwipeHandlers","set","listen","nativeElement","map","handler","removeSwipeHandlers","validateUrl","url","replace","RegExp","getBackgroundUrl","image","get","delete","Injectable","Renderer2","HostListener","NgxGalleryImageComponent","sanitization","elementRef","helperService","activeChange","canChangeImage","ngOnInit","arrows","arrowsAutoHide","autoPlay","startAutoPlay","ngOnChanges","changes","_this","swipe","showNext","showPrev","onMouseEnter","autoPlayPauseOnHover","stopAutoPlay","onMouseLeave","reset","selectedIndex","getImages","images","lazyLoading","indexes_1","prevIndex","infinityMove","length","nextIndex","filter","img","indexOf","timer","setInterval","autoPlayInterval","clearInterval","clickable","show","setChangeTimeout","canShowNext","canShowPrev","timeout","animation","setTimeout","getSafeUrl","bypassSecurityTrustStyle","DomSanitizer","ElementRef","NgxGalleryImage","obj","small","medium","big","description","label","NgxGalleryLayout","ThumbnailsTop","ThumbnailsBottom","NgxGalleryOrder","Column","Row","Page","NgxGalleryAction","action","icon","onClick","NgxGalleryOptions","preventDefaults","undefined","breakpoint","use","source","defaultValue","width","height","fullWidth","layout","startIndex","linkTarget","imagePercent","imageArrows","imageArrowsAutoHide","imageSwipe","imageAnimation","imageSize","imageAutoPlay","imageAutoPlayInterval","imageAutoPlayPauseOnHover","imageInfinityMove","imageActions","imageDescription","imageBullets","thumbnails","thumbnailsColumns","thumbnailsRows","thumbnailsPercent","thumbnailsMargin","thumbnailsArrows","thumbnailsArrowsAutoHide","thumbnailsSwipe","thumbnailsMoveSize","thumbnailsOrder","thumbnailsRemainingCount","thumbnailsAsLinks","thumbnailsAutoHide","thumbnailMargin","thumbnailSize","thumbnailActions","preview","previewDescription","previewArrows","previewArrowsAutoHide","previewSwipe","previewFullscreen","previewForceFullscreen","previewCloseOnClick","previewCloseOnEsc","previewKeyboardNavigation","previewAnimation","previewAutoPlay","previewAutoPlayInterval","previewAutoPlayPauseOnHover","previewInfinityMove","previewZoom","previewZoomStep","previewZoomMax","previewZoomMin","previewRotate","previewDownload","previewCustom","previewBullets","arrowPrevIcon","arrowNextIcon","closeIcon","fullscreenIcon","spinnerIcon","zoomInIcon","zoomOutIcon","rotateLeftIcon","rotateRightIcon","downloadIcon","actions","NgxGalleryOrderedImage","src","NgxGalleryPreviewComponent","changeDetectorRef","showSpinner","positionLeft","positionTop","zoomValue","loading","rotateValue","opened","closed","isOpen","initialX","initialY","initialLeft","initialTop","isMove","ngOnDestroy","onKeyDown","keyboardNavigation","isKeyboardPrev","isKeyboardNext","closeOnEsc","isKeyboardEsc","close","open","forceFullscreen","manageFullscreen","closeFullscreen","imageMouseEnter","imageMouseLeave","clearTimeout","showAtIndex","fullscreen","doc","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","openFullscreen","substr","bypassSecurityTrustUrl","zoomIn","canZoomIn","zoomStep","zoomMax","zoomOut","canZoomOut","zoomMin","resetPosition","rotateLeft","rotateRight","getTransform","canDragOnZoom","zoom","mouseDownHandler","getClientX","getClientY","mouseUpHandler","mouseMoveHandler","touches","clientX","clientY","keyCode","document","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","isFullscreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","first","_show","srcIndex","descriptions","markForCheck","isLoaded","previewImage","onload","complete","naturalWidth","ChangeDetectorRef","ViewChild","static","NgxGalleryThumbnailsComponent","minStopIndex","validateIndex","moveRight","moveLeft","remainingCountValue","rows","columns","mouseenter","setDefaultPosition","remainingCount","slice","order","stopIndex","moveSize","hasLink","links","canMoveRight","maxIndex","getMaxIndex","setThumbnailsPosition","canMoveLeft","getThumbnailLeft","calculatedIndex","Math","floor","ceil","getThumbnailPosition","getThumbnailTop","getThumbnailWidth","getThumbnailDimension","getThumbnailHeight","thumbnailsLeft","thumbnailsMarginLeft","margin","canShowArrows","getVisibleCount","newIndex","getSafeStyle","NgxGalleryComponent","myElement","imagesReady","change","previewOpen","previewClose","previewChange","oldImagesLength","prevBreakpoint","options","opt","sortOptions","setBreakpoint","setOptions","checkFullWidth","currentOptions","ngDoCheck","oldImages","setImages","resetThumbnails","ngAfterViewInit","onResize","fullWidthTimeout","getImageHeight","getThumbnailsHeight","getThumbnailsMarginTop","getThumbnailsMarginBottom","openPreview","previewEnabled","onPreviewOpen","onPreviewClose","selectFromImage","select","selectFromThumbnails","previewSelect","moveThumbnailsRight","thubmnails","moveThumbnailsLeft","canMoveThumbnailsRight","canMoveThumbnailsLeft","body","clientWidth","left","parentNode","innerWidth","smallImages","mediumImages","bigImages","labels","breakpoints","window","pop","arguments","concat","__spread","a","sort","combineOptions","second","keys","val","providers","HostBinding","CustomHammerConfig","_super","apply","overrides","pinch","enable","rotate","__","constructor","create","tslib_1.__extends","HammerGestureConfig","NgxGalleryModule","NgModule","imports","CommonModule","declarations","exports","provide","HAMMER_GESTURE_CONFIG","useClass"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-action',\n  template: `\n    <div\n      class=\"ngx-gallery-icon\"\n      [class.ngx-gallery-icon-disabled]=\"disabled\"\n      aria-hidden=\"true\"\n      title=\"{{ titleText }}\"\n      (click)=\"handleClick($event)\"\n    >\n      <i class=\"ngx-gallery-icon-content {{ icon }}\"></i>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryActionComponent {\n  @Input() icon: string;\n  @Input() disabled = false;\n  @Input() titleText = '';\n\n  @Output() clicked: EventEmitter<Event> = new EventEmitter();\n\n  handleClick(event: Event) {\n    if (!this.disabled) {\n      this.clicked.emit(event);\n    }\n\n    event.stopPropagation();\n    event.preventDefault();\n  }\n}\n","export class NgxGalleryAnimation {\n    static Fade = 'fade';\n    static Slide = 'slide';\n    static Rotate = 'rotate';\n    static Zoom = 'zoom';\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-arrows',\n  template: `\n    <div class=\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-left\">\n      <div\n        class=\"ngx-gallery-icon ngx-gallery-arrow\"\n        aria-hidden=\"true\"\n        (click)=\"handlePrevClick()\"\n        [class.ngx-gallery-disabled]=\"prevDisabled\"\n      >\n        <i class=\"ngx-gallery-icon-content {{ arrowPrevIcon }}\"></i>\n      </div>\n    </div>\n    <div class=\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-right\">\n      <div\n        class=\"ngx-gallery-icon ngx-gallery-arrow\"\n        aria-hidden=\"true\"\n        (click)=\"handleNextClick()\"\n        [class.ngx-gallery-disabled]=\"nextDisabled\"\n      >\n        <i class=\"ngx-gallery-icon-content {{ arrowNextIcon }}\"></i>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./ngx-gallery-arrows.component.scss']\n})\nexport class NgxGalleryArrowsComponent {\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n\n  @Output() prevClick = new EventEmitter();\n  @Output() nextClick = new EventEmitter();\n\n  handlePrevClick(): void {\n    this.prevClick.emit();\n  }\n\n  handleNextClick(): void {\n    this.nextClick.emit();\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-bullets',\n  template: `\n    <div\n      class=\"ngx-gallery-bullet\"\n      *ngFor=\"let bullet of getBullets(); let i = index\"\n      (click)=\"handleChange($event, i)\"\n      [ngClass]=\"{ 'ngx-gallery-active': i == active }\"\n    ></div>\n  `,\n  styleUrls: ['./ngx-gallery-bullets.component.scss']\n})\nexport class NgxGalleryBulletsComponent {\n  @Input() count: number;\n  @Input() active = 0;\n\n  @Output() changed = new EventEmitter();\n\n  getBullets(): number[] {\n    return Array(this.count);\n  }\n\n  handleChange(event: Event, index: number): void {\n    this.changed.emit(index);\n  }\n}\n","export class NgxGalleryImageSize {\n    static Cover = 'cover';\n    static Contain = 'contain';\n}\n","import { ElementRef, HostListener, Injectable, Renderer2 } from '@angular/core';\n\n@Injectable()\nexport class NgxGalleryHelperService {\n  private swipeHandlers: Map<string, Array<() => void>> = new Map<string, Array<() => void>>();\n\n  constructor(private renderer: Renderer2) {}\n\n  @HostListener('swipeLeft', ['$event'])\n  listenSwipeLeft(event) {}\n\n  manageSwipe(\n    status: boolean,\n    element: ElementRef,\n    id: string,\n    nextHandler: () => void,\n    prevHandler: () => void\n  ): void {\n    const handlers = this.getSwipeHandlers(id);\n\n    // swipeleft and swiperight are available only if hammerjs is included\n    try {\n      if (status && !handlers) {\n        this.swipeHandlers.set(id, [\n          this.renderer.listen(element.nativeElement, 'swipeleft', () => nextHandler()),\n          this.renderer.listen(element.nativeElement, 'swiperight', () => prevHandler())\n        ]);\n      } else if (!status && handlers) {\n        handlers.map(handler => handler());\n        this.removeSwipeHandlers(id);\n      }\n    } catch (e) {}\n  }\n\n  validateUrl(url: string): string {\n    if (url.replace) {\n      // tslint:disable-next-line: quotemark\n      return url.replace(new RegExp(' ', 'g'), '%20').replace(new RegExp(\"'\", 'g'), '%27');\n    } else {\n      return url;\n    }\n  }\n\n  getBackgroundUrl(image: string) {\n    return `url('${this.validateUrl(image)}')`;\n  }\n\n  private getSwipeHandlers(id: string): Array<() => void> | undefined {\n    return this.swipeHandlers.get(id);\n  }\n\n  private removeSwipeHandlers(id: string): void {\n    this.swipeHandlers.delete(id);\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\nimport { NgxGalleryAnimation } from './ngx-gallery-animation.model';\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\nimport { NgxGalleryOrderedImage } from './ngx-gallery-ordered-image.model';\n\n@Component({\n  selector: 'ngx-gallery-image',\n  template: `\n    <div class=\"ngx-gallery-image-wrapper ngx-gallery-animation-{{ animation }} ngx-gallery-image-size-{{ size }}\">\n      <div\n        class=\"ngx-gallery-image\"\n        *ngFor=\"let image of getImages(); let i = index\"\n        [ngClass]=\"{\n          'ngx-gallery-active': selectedIndex == image.index,\n          'ngx-gallery-inactive-left': selectedIndex > image.index,\n          'ngx-gallery-inactive-right': selectedIndex < image.index,\n          'ngx-gallery-clickable': clickable\n        }\"\n        [style.background-image]=\"getSafeUrl(image.src)\"\n        (click)=\"handleClick($event, image.index)\"\n      >\n        <div class=\"ngx-gallery-icons-wrapper\">\n          <ngx-gallery-action\n            *ngFor=\"let action of actions\"\n            [icon]=\"action.icon\"\n            [disabled]=\"action.disabled\"\n            [titleText]=\"action.titleText\"\n            (clicked)=\"action.onClick($event, image.index)\"\n          ></ngx-gallery-action>\n        </div>\n        <div\n          class=\"ngx-gallery-image-text\"\n          *ngIf=\"showDescription && descriptions[image.index]\"\n          [innerHTML]=\"descriptions[image.index]\"\n          (click)=\"$event.stopPropagation()\"\n        ></div>\n      </div>\n    </div>\n    <ngx-gallery-bullets\n      *ngIf=\"bullets\"\n      [count]=\"images.length\"\n      [active]=\"selectedIndex\"\n      (changed)=\"show($event)\"\n    ></ngx-gallery-bullets>\n    <ngx-gallery-arrows\n      class=\"ngx-gallery-image-size-{{ size }}\"\n      *ngIf=\"arrows\"\n      (prevClick)=\"showPrev()\"\n      (nextClick)=\"showNext()\"\n      [prevDisabled]=\"!canShowPrev()\"\n      [nextDisabled]=\"!canShowNext()\"\n      [arrowPrevIcon]=\"arrowPrevIcon\"\n      [arrowNextIcon]=\"arrowNextIcon\"\n    ></ngx-gallery-arrows>\n  `,\n  styleUrls: ['./ngx-gallery-image.component.scss']\n})\nexport class NgxGalleryImageComponent implements OnInit, OnChanges {\n  @Input() images: NgxGalleryOrderedImage[];\n  @Input() clickable: boolean;\n  @Input() selectedIndex: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() animation: string;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() bullets: boolean;\n\n  @Output() clicked = new EventEmitter();\n  @Output() activeChange = new EventEmitter();\n\n  canChangeImage = true;\n\n  private timer;\n\n  constructor(\n    private sanitization: DomSanitizer,\n    private elementRef: ElementRef,\n    private helperService: NgxGalleryHelperService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.arrows && this.arrowsAutoHide) {\n      this.arrows = false;\n    }\n\n    if (this.autoPlay) {\n      this.startAutoPlay();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.swipe) {\n      this.helperService.manageSwipe(\n        this.swipe,\n        this.elementRef,\n        'image',\n        () => this.showNext(),\n        () => this.showPrev()\n      );\n    }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    if (this.arrowsAutoHide && !this.arrows) {\n      this.arrows = true;\n    }\n\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\n      this.stopAutoPlay();\n    }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    if (this.arrowsAutoHide && this.arrows) {\n      this.arrows = false;\n    }\n\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\n      this.startAutoPlay();\n    }\n  }\n\n  reset(index: number): void {\n    this.selectedIndex = index;\n  }\n\n  getImages(): NgxGalleryOrderedImage[] {\n    if (!this.images) {\n      return [];\n    }\n\n    if (this.lazyLoading) {\n      const indexes = [this.selectedIndex];\n      const prevIndex = this.selectedIndex - 1;\n\n      if (prevIndex === -1 && this.infinityMove) {\n        indexes.push(this.images.length - 1);\n      } else if (prevIndex >= 0) {\n        indexes.push(prevIndex);\n      }\n\n      const nextIndex = this.selectedIndex + 1;\n\n      if (nextIndex === this.images.length && this.infinityMove) {\n        indexes.push(0);\n      } else if (nextIndex < this.images.length) {\n        indexes.push(nextIndex);\n      }\n\n      return this.images.filter((img, i) => indexes.indexOf(i) !== -1);\n    } else {\n      return this.images;\n    }\n  }\n\n  startAutoPlay(): void {\n    this.stopAutoPlay();\n\n    this.timer = setInterval(() => {\n      if (!this.showNext()) {\n        this.selectedIndex = -1;\n        this.showNext();\n      }\n    }, this.autoPlayInterval);\n  }\n\n  stopAutoPlay() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n\n  handleClick(event: Event, index: number): void {\n    if (this.clickable) {\n      this.clicked.emit(index);\n\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  show(index: number) {\n    this.selectedIndex = index;\n    this.activeChange.emit(this.selectedIndex);\n    this.setChangeTimeout();\n  }\n\n  showNext(): boolean {\n    if (this.canShowNext() && this.canChangeImage) {\n      this.selectedIndex++;\n\n      if (this.selectedIndex === this.images.length) {\n        this.selectedIndex = 0;\n      }\n\n      this.activeChange.emit(this.selectedIndex);\n      this.setChangeTimeout();\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  showPrev(): void {\n    if (this.canShowPrev() && this.canChangeImage) {\n      this.selectedIndex--;\n\n      if (this.selectedIndex < 0) {\n        this.selectedIndex = this.images.length - 1;\n      }\n\n      this.activeChange.emit(this.selectedIndex);\n      this.setChangeTimeout();\n    }\n  }\n\n  setChangeTimeout() {\n    this.canChangeImage = false;\n    let timeout = 1000;\n\n    if (this.animation === NgxGalleryAnimation.Slide || this.animation === NgxGalleryAnimation.Fade) {\n      timeout = 500;\n    }\n\n    setTimeout(() => {\n      this.canChangeImage = true;\n    }, timeout);\n  }\n\n  canShowNext(): boolean {\n    if (this.images) {\n      return this.infinityMove || this.selectedIndex < this.images.length - 1 ? true : false;\n    } else {\n      return false;\n    }\n  }\n\n  canShowPrev(): boolean {\n    if (this.images) {\n      return this.infinityMove || this.selectedIndex > 0 ? true : false;\n    } else {\n      return false;\n    }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n    return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n}\n","import { SafeResourceUrl } from '@angular/platform-browser';\n\nexport interface INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    label?: string;\n}\n\nexport class NgxGalleryImage implements INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    label?: string;\n\n    constructor(obj: INgxGalleryImage) {\n        this.small = obj.small;\n        this.medium = obj.medium;\n        this.big = obj.big;\n        this.description = obj.description;\n        this.url = obj.url;\n        this.label = obj.label;\n    }\n}\n","export class NgxGalleryLayout {\n    static ThumbnailsTop = 'thumbnails-top';\n    static ThumbnailsBottom = 'thumbnails-bottom';\n}\n","export class NgxGalleryOrder {\n    static Column = 1;\n    static Row = 2;\n    static Page = 3;\n}\n","export interface INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n}\n\nexport class NgxGalleryAction implements INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n\n    constructor(action: INgxGalleryAction) {\n        this.icon = action.icon;\n        this.disabled = action.disabled ? action.disabled : false;\n        this.titleText = action.titleText ? action.titleText : '';\n\n        this.onClick = action.onClick;\n    }\n}\n","import { NgxGalleryAnimation } from './ngx-gallery-animation.model';\nimport { NgxGalleryImageSize } from './ngx-gallery-image-size.model';\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\nimport { NgxGalleryOrder } from './ngx-gallery-order.model';\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\n\nexport interface INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    actions?: NgxGalleryAction[];\n}\n\nexport class NgxGalleryOptions implements INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    actions?: NgxGalleryAction[];\n\n    constructor(obj: INgxGalleryOptions) {\n\n        const preventDefaults = obj.breakpoint === undefined ? false : true;\n\n        function use<T>(source: T, defaultValue: T): T {\n            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\n        }\n\n        this.breakpoint = use(obj.breakpoint, undefined);\n        this.width = use(obj.width, '500px');\n        this.height = use(obj.height, '400px');\n        this.fullWidth = use(obj.fullWidth, false);\n        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\n        this.startIndex = use(obj.startIndex, 0);\n        this.linkTarget = use(obj.linkTarget, '_blank');\n        this.lazyLoading = use(obj.lazyLoading, true);\n\n        this.image = use(obj.image, true);\n        this.imagePercent = use(obj.imagePercent, 75);\n        this.imageArrows = use(obj.imageArrows, true);\n        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\n        this.imageSwipe = use(obj.imageSwipe, false);\n        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\n        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\n        this.imageAutoPlay = use(obj.imageAutoPlay, false);\n        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\n        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\n        this.imageInfinityMove = use(obj.imageInfinityMove, false);\n        if (obj && obj.imageActions && obj.imageActions.length) {\n            obj.imageActions = obj.imageActions.map(action => new NgxGalleryAction(action));\n        }\n        this.imageActions = use(obj.imageActions, []);\n        this.imageDescription = use(obj.imageDescription, false);\n        this.imageBullets = use(obj.imageBullets, false);\n\n        this.thumbnails = use(obj.thumbnails, true);\n        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\n        this.thumbnailsRows = use(obj.thumbnailsRows, 1);\n        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\n        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\n        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\n        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\n        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\n        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\n        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\n        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\n        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\n        this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);\n        this.thumbnailMargin = use(obj.thumbnailMargin, 10);\n        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\n        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\n            obj.thumbnailActions = obj.thumbnailActions.map(action => new NgxGalleryAction(action));\n        }\n        this.thumbnailActions = use(obj.thumbnailActions, []);\n\n        this.preview = use(obj.preview, true);\n        this.previewDescription = use(obj.previewDescription, true);\n        this.previewArrows = use(obj.previewArrows, true);\n        this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);\n        this.previewSwipe = use(obj.previewSwipe, false);\n        this.previewFullscreen = use(obj.previewFullscreen, false);\n        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\n        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\n        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\n        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\n        this.previewAnimation = use(obj.previewAnimation, true);\n        this.previewAutoPlay = use(obj.previewAutoPlay, false);\n        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\n        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\n        this.previewInfinityMove = use(obj.previewInfinityMove, false);\n        this.previewZoom = use(obj.previewZoom, false);\n        this.previewZoomStep = use(obj.previewZoomStep, 0.1);\n        this.previewZoomMax = use(obj.previewZoomMax, 2);\n        this.previewZoomMin = use(obj.previewZoomMin, 0.5);\n        this.previewRotate = use(obj.previewRotate, false);\n        this.previewDownload = use(obj.previewDownload, false);\n        this.previewCustom = use(obj.previewCustom, undefined);\n        this.previewBullets = use(obj.previewBullets, false);\n\n        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\n        this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\n        this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\n        this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\n        this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\n        this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\n        this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\n        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\n        this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\n        this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');\n\n        if (obj && obj.actions && obj.actions.length) {\n            obj.actions = obj.actions.map(action => new NgxGalleryAction(action));\n        }\n        this.actions = use(obj.actions, []);\n    }\n}\n","import { SafeResourceUrl } from '@angular/platform-browser';\n\nexport interface INgxGalleryOrderedImage {\n    src: string | SafeResourceUrl;\n    index: number;\n}\n\nexport class NgxGalleryOrderedImage implements INgxGalleryOrderedImage {\n    src: string | SafeResourceUrl;\n    index: number;\n\n    constructor(obj: INgxGalleryOrderedImage) {\n        this.src = obj.src;\n        this.index = obj.index;\n    }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl, SafeStyle, SafeUrl } from '@angular/platform-browser';\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\n\n@Component({\n  selector: 'ngx-gallery-preview',\n  template: `\n    <ngx-gallery-arrows\n      *ngIf=\"arrows\"\n      (prevClick)=\"showPrev()\"\n      (nextClick)=\"showNext()\"\n      [prevDisabled]=\"!canShowPrev()\"\n      [nextDisabled]=\"!canShowNext()\"\n      [arrowPrevIcon]=\"arrowPrevIcon\"\n      [arrowNextIcon]=\"arrowNextIcon\"\n    ></ngx-gallery-arrows>\n    <div class=\"ngx-gallery-preview-top\">\n      <div class=\"ngx-gallery-preview-icons\">\n        <ngx-gallery-action\n          *ngFor=\"let action of actions\"\n          [icon]=\"action.icon\"\n          [disabled]=\"action.disabled\"\n          [titleText]=\"action.titleText\"\n          (clicked)=\"action.onClick($event, index)\"\n        ></ngx-gallery-action>\n        <a *ngIf=\"download && src\" [href]=\"src\" class=\"ngx-gallery-icon\" aria-hidden=\"true\" download>\n          <i class=\"ngx-gallery-icon-content {{ downloadIcon }}\"></i>\n        </a>\n        <ngx-gallery-action\n          *ngIf=\"zoom\"\n          [icon]=\"zoomOutIcon\"\n          [disabled]=\"!canZoomOut()\"\n          (clicked)=\"zoomOut()\"\n        ></ngx-gallery-action>\n        <ngx-gallery-action\n          *ngIf=\"zoom\"\n          [icon]=\"zoomInIcon\"\n          [disabled]=\"!canZoomIn()\"\n          (clicked)=\"zoomIn()\"\n        ></ngx-gallery-action>\n        <ngx-gallery-action *ngIf=\"rotate\" [icon]=\"rotateLeftIcon\" (clicked)=\"rotateLeft()\"></ngx-gallery-action>\n        <ngx-gallery-action *ngIf=\"rotate\" [icon]=\"rotateRightIcon\" (clicked)=\"rotateRight()\"></ngx-gallery-action>\n        <ngx-gallery-action\n          *ngIf=\"fullscreen\"\n          [icon]=\"'ngx-gallery-fullscreen ' + fullscreenIcon\"\n          (clicked)=\"manageFullscreen()\"\n        ></ngx-gallery-action>\n        <ngx-gallery-action [icon]=\"'ngx-gallery-close ' + closeIcon\" (clicked)=\"close()\"></ngx-gallery-action>\n      </div>\n    </div>\n    <div class=\"ngx-spinner-wrapper ngx-gallery-center\" [class.ngx-gallery-active]=\"showSpinner\">\n      <i class=\"ngx-gallery-icon ngx-gallery-spinner {{ spinnerIcon }}\" aria-hidden=\"true\"></i>\n    </div>\n    <div\n      class=\"ngx-gallery-preview-wrapper\"\n      (click)=\"closeOnClick && close()\"\n      (mouseup)=\"mouseUpHandler($event)\"\n      (mousemove)=\"mouseMoveHandler($event)\"\n      (touchend)=\"mouseUpHandler($event)\"\n      (touchmove)=\"mouseMoveHandler($event)\"\n    >\n      <div class=\"ngx-gallery-preview-img-wrapper\">\n        <img\n          *ngIf=\"src\"\n          #previewImage\n          class=\"ngx-gallery-preview-img ngx-gallery-center\"\n          [src]=\"src\"\n          (click)=\"$event.stopPropagation()\"\n          (mouseenter)=\"imageMouseEnter()\"\n          (mouseleave)=\"imageMouseLeave()\"\n          (mousedown)=\"mouseDownHandler($event)\"\n          (touchstart)=\"mouseDownHandler($event)\"\n          [class.ngx-gallery-active]=\"!loading\"\n          [class.animation]=\"animation\"\n          [class.ngx-gallery-grab]=\"canDragOnZoom()\"\n          [style.transform]=\"getTransform()\"\n          [style.left]=\"positionLeft + 'px'\"\n          [style.top]=\"positionTop + 'px'\"\n        />\n        <ngx-gallery-bullets\n          *ngIf=\"bullets\"\n          [count]=\"images.length\"\n          [active]=\"index\"\n          (changed)=\"showAtIndex($event)\"\n        ></ngx-gallery-bullets>\n      </div>\n      <div\n        class=\"ngx-gallery-preview-text\"\n        *ngIf=\"showDescription && description\"\n        [innerHTML]=\"description\"\n        (click)=\"$event.stopPropagation()\"\n      ></div>\n    </div>\n  `,\n  styleUrls: ['./ngx-gallery-preview.component.scss']\n})\nexport class NgxGalleryPreviewComponent implements OnInit, OnDestroy, OnChanges {\n  src: SafeUrl;\n  srcIndex: number;\n  description: string;\n  showSpinner = false;\n  positionLeft = 0;\n  positionTop = 0;\n  zoomValue = 1;\n  loading = false;\n  rotateValue = 0;\n  index = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() fullscreen: boolean;\n  @Input() forceFullscreen: boolean;\n  @Input() closeOnClick: boolean;\n  @Input() closeOnEsc: boolean;\n  @Input() keyboardNavigation: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() closeIcon: string;\n  @Input() fullscreenIcon: string;\n  @Input() spinnerIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() zoom: boolean;\n  @Input() zoomStep: number;\n  @Input() zoomMax: number;\n  @Input() zoomMin: number;\n  @Input() zoomInIcon: string;\n  @Input() zoomOutIcon: string;\n  @Input() animation: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() rotate: boolean;\n  @Input() rotateLeftIcon: string;\n  @Input() rotateRightIcon: string;\n  @Input() download: boolean;\n  @Input() downloadIcon: string;\n  @Input() bullets: string;\n\n  @Output() opened = new EventEmitter();\n  @Output() closed = new EventEmitter();\n  @Output() activeChange = new EventEmitter<number>();\n\n  @ViewChild('previewImage', { static: false }) previewImage: ElementRef;\n\n  private isOpen = false;\n  private timer;\n  private initialX = 0;\n  private initialY = 0;\n  private initialLeft = 0;\n  private initialTop = 0;\n  private isMove = false;\n\n  constructor(\n    private sanitization: DomSanitizer,\n    private elementRef: ElementRef,\n    private helperService: NgxGalleryHelperService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    if (this.arrows && this.arrowsAutoHide) {\n      this.arrows = false;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.swipe) {\n      this.helperService.manageSwipe(\n        this.swipe,\n        this.elementRef,\n        'preview',\n        () => this.showNext(),\n        () => this.showPrev()\n      );\n    }\n  }\n\n  ngOnDestroy() {}\n\n  @HostListener('mouseenter') onMouseEnter() {\n    if (this.arrowsAutoHide && !this.arrows) {\n      this.arrows = true;\n    }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    if (this.arrowsAutoHide && this.arrows) {\n      this.arrows = false;\n    }\n  }\n\n  @HostListener('window:keydown', ['$event'])\n  onKeyDown(e: KeyboardEvent) {\n    if (this.isOpen) {\n      if (this.keyboardNavigation) {\n        if (this.isKeyboardPrev(e)) {\n          this.showPrev();\n        } else if (this.isKeyboardNext(e)) {\n          this.showNext();\n        }\n      }\n      if (this.closeOnEsc && this.isKeyboardEsc(e)) {\n        this.close();\n      }\n    }\n  }\n\n  open(index: number): void {\n    this.opened.emit();\n\n    this.index = index;\n    this.isOpen = true;\n    this.show(true);\n\n    if (this.forceFullscreen) {\n      this.manageFullscreen();\n    }\n  }\n\n  close(): void {\n    this.isOpen = false;\n    this.closeFullscreen();\n    this.closed.emit();\n\n    this.stopAutoPlay();\n  }\n\n  imageMouseEnter(): void {\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\n      this.stopAutoPlay();\n    }\n  }\n\n  imageMouseLeave(): void {\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\n      this.startAutoPlay();\n    }\n  }\n\n  startAutoPlay(): void {\n    if (this.autoPlay) {\n      this.stopAutoPlay();\n\n      this.timer = setTimeout(() => {\n        if (!this.showNext()) {\n          this.index = -1;\n          this.showNext();\n        }\n      }, this.autoPlayInterval);\n    }\n  }\n\n  stopAutoPlay(): void {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n  }\n\n  showAtIndex(index: number): void {\n    this.index = index;\n    this.show();\n  }\n\n  showNext(): boolean {\n    if (this.canShowNext()) {\n      this.index++;\n\n      if (this.index === this.images.length) {\n        this.index = 0;\n      }\n\n      this.show();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  showPrev(): void {\n    if (this.canShowPrev()) {\n      this.index--;\n\n      if (this.index < 0) {\n        this.index = this.images.length - 1;\n      }\n\n      this.show();\n    }\n  }\n\n  canShowNext(): boolean {\n    if (this.loading) {\n      return false;\n    } else if (this.images) {\n      return this.infinityMove || this.index < this.images.length - 1 ? true : false;\n    } else {\n      return false;\n    }\n  }\n\n  canShowPrev(): boolean {\n    if (this.loading) {\n      return false;\n    } else if (this.images) {\n      return this.infinityMove || this.index > 0 ? true : false;\n    } else {\n      return false;\n    }\n  }\n\n  manageFullscreen(): void {\n    if (this.fullscreen || this.forceFullscreen) {\n      const doc = document as any;\n\n      if (\n        !doc.fullscreenElement &&\n        !doc.mozFullScreenElement &&\n        !doc.webkitFullscreenElement &&\n        !doc.msFullscreenElement\n      ) {\n        this.openFullscreen();\n      } else {\n        this.closeFullscreen();\n      }\n    }\n  }\n\n  getSafeUrl(image: string): SafeUrl {\n    return image.substr(0, 10) === 'data:image' ? image : this.sanitization.bypassSecurityTrustUrl(image);\n  }\n\n  zoomIn(): void {\n    if (this.canZoomIn()) {\n      this.zoomValue += this.zoomStep;\n\n      if (this.zoomValue > this.zoomMax) {\n        this.zoomValue = this.zoomMax;\n      }\n    }\n  }\n\n  zoomOut(): void {\n    if (this.canZoomOut()) {\n      this.zoomValue -= this.zoomStep;\n\n      if (this.zoomValue < this.zoomMin) {\n        this.zoomValue = this.zoomMin;\n      }\n\n      if (this.zoomValue <= 1) {\n        this.resetPosition();\n      }\n    }\n  }\n\n  rotateLeft(): void {\n    this.rotateValue -= 90;\n  }\n\n  rotateRight(): void {\n    this.rotateValue += 90;\n  }\n\n  getTransform(): SafeStyle {\n    return this.sanitization.bypassSecurityTrustStyle(\n      'scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)'\n    );\n  }\n\n  canZoomIn(): boolean {\n    return this.zoomValue < this.zoomMax ? true : false;\n  }\n\n  canZoomOut(): boolean {\n    return this.zoomValue > this.zoomMin ? true : false;\n  }\n\n  canDragOnZoom() {\n    return this.zoom && this.zoomValue > 1;\n  }\n\n  mouseDownHandler(e): void {\n    if (this.canDragOnZoom()) {\n      this.initialX = this.getClientX(e);\n      this.initialY = this.getClientY(e);\n      this.initialLeft = this.positionLeft;\n      this.initialTop = this.positionTop;\n      this.isMove = true;\n\n      e.preventDefault();\n    }\n  }\n\n  mouseUpHandler(e): void {\n    this.isMove = false;\n  }\n\n  mouseMoveHandler(e) {\n    if (this.isMove) {\n      this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\n      this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\n    }\n  }\n\n  private getClientX(e): number {\n    return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\n  }\n\n  private getClientY(e): number {\n    return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\n  }\n\n  private resetPosition() {\n    if (this.zoom) {\n      this.positionLeft = 0;\n      this.positionTop = 0;\n    }\n  }\n\n  private isKeyboardNext(e): boolean {\n    return e.keyCode === 39 ? true : false;\n  }\n\n  private isKeyboardPrev(e): boolean {\n    return e.keyCode === 37 ? true : false;\n  }\n\n  private isKeyboardEsc(e): boolean {\n    return e.keyCode === 27 ? true : false;\n  }\n\n  private openFullscreen(): void {\n    const element = document.documentElement as any;\n\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n      element.webkitRequestFullscreen();\n    }\n  }\n\n  private closeFullscreen(): void {\n    if (this.isFullscreen()) {\n      const doc = document as any;\n\n      if (doc.exitFullscreen) {\n        doc.exitFullscreen();\n      } else if (doc.msExitFullscreen) {\n        doc.msExitFullscreen();\n      } else if (doc.mozCancelFullScreen) {\n        doc.mozCancelFullScreen();\n      } else if (doc.webkitExitFullscreen) {\n        doc.webkitExitFullscreen();\n      }\n    }\n  }\n\n  private isFullscreen() {\n    const doc = document as any;\n\n    return doc.fullscreenElement || doc.webkitFullscreenElement || doc.mozFullScreenElement || doc.msFullscreenElement;\n  }\n\n  private show(first = false) {\n    this.loading = true;\n    this.stopAutoPlay();\n\n    this.activeChange.emit(this.index);\n\n    if (first || !this.animation) {\n      this._show();\n    } else {\n      setTimeout(() => this._show(), 600);\n    }\n  }\n\n  private _show() {\n    this.zoomValue = 1;\n    this.rotateValue = 0;\n    this.resetPosition();\n\n    this.src = this.getSafeUrl(this.images[this.index] as string);\n    this.srcIndex = this.index;\n    this.description = this.descriptions[this.index];\n    this.changeDetectorRef.markForCheck();\n\n    setTimeout(() => {\n      if (this.isLoaded(this.previewImage.nativeElement)) {\n        this.loading = false;\n        this.startAutoPlay();\n        this.changeDetectorRef.markForCheck();\n      } else {\n        setTimeout(() => {\n          if (this.loading) {\n            this.showSpinner = true;\n            this.changeDetectorRef.markForCheck();\n          }\n        });\n\n        this.previewImage.nativeElement.onload = () => {\n          this.loading = false;\n          this.showSpinner = false;\n          this.previewImage.nativeElement.onload = null;\n          this.startAutoPlay();\n          this.changeDetectorRef.markForCheck();\n        };\n      }\n    });\n  }\n\n  private isLoaded(img): boolean {\n    if (!img.complete) {\n      return false;\n    }\n\n    if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\n      return false;\n    }\n\n    return true;\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\nimport { NgxGalleryOrder } from './ngx-gallery-order.model';\n\n@Component({\n  selector: 'ngx-gallery-thumbnails',\n  template: `\n    <div class=\"ngx-gallery-thumbnails-wrapper ngx-gallery-thumbnail-size-{{ size }}\">\n      <div\n        class=\"ngx-gallery-thumbnails\"\n        [style.transform]=\"'translateX(' + thumbnailsLeft + ')'\"\n        [style.marginLeft]=\"thumbnailsMarginLeft\"\n      >\n        <a\n          [href]=\"hasLink(i) ? links[i] : '#'\"\n          [target]=\"linkTarget\"\n          class=\"ngx-gallery-thumbnail\"\n          *ngFor=\"let image of getImages(); let i = index\"\n          [style.background-image]=\"getSafeUrl(image)\"\n          (click)=\"handleClick($event, i)\"\n          [style.width]=\"getThumbnailWidth()\"\n          [style.height]=\"getThumbnailHeight()\"\n          [style.left]=\"getThumbnailLeft(i)\"\n          [style.top]=\"getThumbnailTop(i)\"\n          [ngClass]=\"{ 'ngx-gallery-active': i == selectedIndex, 'ngx-gallery-clickable': clickable }\"\n          [attr.aria-label]=\"labels[i]\"\n        >\n          <div class=\"ngx-gallery-icons-wrapper\">\n            <ngx-gallery-action\n              *ngFor=\"let action of actions\"\n              [icon]=\"action.icon\"\n              [disabled]=\"action.disabled\"\n              [titleText]=\"action.titleText\"\n              (clicked)=\"action.onClick($event, i)\"\n            ></ngx-gallery-action>\n          </div>\n          <div\n            class=\"ngx-gallery-remaining-count-overlay\"\n            *ngIf=\"remainingCount && remainingCountValue && i == rows * columns - 1\"\n          >\n            <span class=\"ngx-gallery-remaining-count\">+{{ remainingCountValue }}</span>\n          </div>\n        </a>\n      </div>\n    </div>\n    <ngx-gallery-arrows\n      *ngIf=\"canShowArrows()\"\n      (prevClick)=\"moveLeft()\"\n      (nextClick)=\"moveRight()\"\n      [prevDisabled]=\"!canMoveLeft()\"\n      [nextDisabled]=\"!canMoveRight()\"\n      [arrowPrevIcon]=\"arrowPrevIcon\"\n      [arrowNextIcon]=\"arrowNextIcon\"\n    ></ngx-gallery-arrows>\n  `,\n  styleUrls: ['./ngx-gallery-thumbnails.component.scss']\n})\nexport class NgxGalleryThumbnailsComponent implements OnChanges {\n  thumbnailsLeft: string;\n  thumbnailsMarginLeft: string;\n  mouseenter: boolean;\n  remainingCountValue: number;\n\n  minStopIndex = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() links: string[];\n  @Input() labels: string[];\n  @Input() linkTarget: string;\n  @Input() columns: number;\n  @Input() rows: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() margin: number;\n  @Input() selectedIndex: number;\n  @Input() clickable: boolean;\n  @Input() swipe: boolean;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() moveSize: number;\n  @Input() order: number;\n  @Input() remainingCount: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n\n  @Output() activeChange = new EventEmitter();\n\n  private index = 0;\n\n  constructor(\n    private sanitization: DomSanitizer,\n    private elementRef: ElementRef,\n    private helperService: NgxGalleryHelperService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.selectedIndex) {\n      this.validateIndex();\n    }\n\n    if (changes.swipe) {\n      this.helperService.manageSwipe(\n        this.swipe,\n        this.elementRef,\n        'thumbnails',\n        () => this.moveRight(),\n        () => this.moveLeft()\n      );\n    }\n\n    if (this.images) {\n      this.remainingCountValue = this.images.length - this.rows * this.columns;\n    }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.mouseenter = true;\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.mouseenter = false;\n  }\n\n  reset(index: number): void {\n    this.selectedIndex = index;\n    this.setDefaultPosition();\n\n    this.index = 0;\n    this.validateIndex();\n  }\n\n  getImages(): string[] | SafeResourceUrl[] {\n    if (!this.images) {\n      return [];\n    }\n\n    if (this.remainingCount) {\n      return this.images.slice(0, this.rows * this.columns);\n    } else if (this.lazyLoading && this.order !== NgxGalleryOrder.Row) {\n      let stopIndex = 0;\n\n      if (this.order === NgxGalleryOrder.Column) {\n        stopIndex = (this.index + this.columns + this.moveSize) * this.rows;\n      } else if (this.order === NgxGalleryOrder.Page) {\n        stopIndex = this.index + this.columns * this.rows * 2;\n      }\n\n      if (stopIndex <= this.minStopIndex) {\n        stopIndex = this.minStopIndex;\n      } else {\n        this.minStopIndex = stopIndex;\n      }\n\n      return this.images.slice(0, stopIndex);\n    } else {\n      return this.images;\n    }\n  }\n\n  handleClick(event: Event, index: number): void {\n    if (!this.hasLink(index)) {\n      this.selectedIndex = index;\n      this.activeChange.emit(index);\n\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  hasLink(index: number): boolean {\n    if (this.links && this.links.length && this.links[index]) {\n      return true;\n    }\n  }\n\n  moveRight(): void {\n    if (this.canMoveRight()) {\n      this.index += this.moveSize;\n      const maxIndex = this.getMaxIndex() - this.columns;\n\n      if (this.index > maxIndex) {\n        this.index = maxIndex;\n      }\n\n      this.setThumbnailsPosition();\n    }\n  }\n\n  moveLeft(): void {\n    if (this.canMoveLeft()) {\n      this.index -= this.moveSize;\n\n      if (this.index < 0) {\n        this.index = 0;\n      }\n\n      this.setThumbnailsPosition();\n    }\n  }\n\n  canMoveRight(): boolean {\n    return this.index + this.columns < this.getMaxIndex() ? true : false;\n  }\n\n  canMoveLeft(): boolean {\n    return this.index !== 0 ? true : false;\n  }\n\n  getThumbnailLeft(index: number): SafeStyle {\n    let calculatedIndex;\n\n    if (this.order === NgxGalleryOrder.Column) {\n      calculatedIndex = Math.floor(index / this.rows);\n    } else if (this.order === NgxGalleryOrder.Page) {\n      calculatedIndex = (index % this.columns) + Math.floor(index / (this.rows * this.columns)) * this.columns;\n    } else if (this.order === NgxGalleryOrder.Row && this.remainingCount) {\n      calculatedIndex = index % this.columns;\n    } else {\n      calculatedIndex = index % Math.ceil(this.images.length / this.rows);\n    }\n\n    return this.getThumbnailPosition(calculatedIndex, this.columns);\n  }\n\n  getThumbnailTop(index: number): SafeStyle {\n    let calculatedIndex;\n\n    if (this.order === NgxGalleryOrder.Column) {\n      calculatedIndex = index % this.rows;\n    } else if (this.order === NgxGalleryOrder.Page) {\n      calculatedIndex = Math.floor(index / this.columns) - Math.floor(index / (this.rows * this.columns)) * this.rows;\n    } else if (this.order === NgxGalleryOrder.Row && this.remainingCount) {\n      calculatedIndex = Math.floor(index / this.columns);\n    } else {\n      calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\n    }\n\n    return this.getThumbnailPosition(calculatedIndex, this.rows);\n  }\n\n  getThumbnailWidth(): SafeStyle {\n    return this.getThumbnailDimension(this.columns);\n  }\n\n  getThumbnailHeight(): SafeStyle {\n    return this.getThumbnailDimension(this.rows);\n  }\n\n  setThumbnailsPosition(): void {\n    this.thumbnailsLeft = -((100 / this.columns) * this.index) + '%';\n\n    this.thumbnailsMarginLeft =\n      -((this.margin - ((this.columns - 1) * this.margin) / this.columns) * this.index) + 'px';\n  }\n\n  setDefaultPosition(): void {\n    this.thumbnailsLeft = '0px';\n    this.thumbnailsMarginLeft = '0px';\n  }\n\n  canShowArrows(): boolean {\n    if (this.remainingCount) {\n      return false;\n    } else if (\n      this.arrows &&\n      this.images &&\n      this.images.length > this.getVisibleCount() &&\n      (!this.arrowsAutoHide || this.mouseenter)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  validateIndex(): void {\n    if (this.images) {\n      let newIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n        newIndex = Math.floor(this.selectedIndex / this.rows);\n      } else {\n        newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\n      }\n\n      if (this.remainingCount) {\n        newIndex = 0;\n      }\n\n      if (newIndex < this.index || newIndex >= this.index + this.columns) {\n        const maxIndex = this.getMaxIndex() - this.columns;\n        this.index = newIndex > maxIndex ? maxIndex : newIndex;\n\n        this.setThumbnailsPosition();\n      }\n    }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n    return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n\n  private getThumbnailPosition(index: number, count: number): SafeStyle {\n    return this.getSafeStyle(\n      'calc(' + (100 / count) * index + '% + ' + (this.margin - ((count - 1) * this.margin) / count) * index + 'px)'\n    );\n  }\n\n  private getThumbnailDimension(count: number): SafeStyle {\n    if (this.margin !== 0) {\n      return this.getSafeStyle('calc(' + 100 / count + '% - ' + ((count - 1) * this.margin) / count + 'px)');\n    } else {\n      return this.getSafeStyle('calc(' + 100 / count + '% + 1px)');\n    }\n  }\n\n  private getMaxIndex(): number {\n    if (this.order === NgxGalleryOrder.Page) {\n      let maxIndex = Math.floor(this.images.length / this.getVisibleCount()) * this.columns;\n\n      if (this.images.length % this.getVisibleCount() > this.columns) {\n        maxIndex += this.columns;\n      } else {\n        maxIndex += this.images.length % this.getVisibleCount();\n      }\n\n      return maxIndex;\n    } else {\n      return Math.ceil(this.images.length / this.rows);\n    }\n  }\n\n  private getVisibleCount(): number {\n    return this.columns * this.rows;\n  }\n\n  private getSafeStyle(value: string): SafeStyle {\n    return this.sanitization.bypassSecurityTrustStyle(value);\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\nimport { NgxGalleryImageComponent } from './ngx-gallery-image.component';\nimport { NgxGalleryImage } from './ngx-gallery-image.model';\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\nimport { NgxGalleryOptions } from './ngx-gallery-options.model';\nimport { NgxGalleryOrderedImage } from './ngx-gallery-ordered-image.model';\nimport { NgxGalleryPreviewComponent } from './ngx-gallery-preview.component';\nimport { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails.component';\n\n@Component({\n  selector: 'ngx-gallery',\n  template: `\n    <div class=\"ngx-gallery-layout {{ currentOptions?.layout }}\">\n      <ngx-gallery-image\n        *ngIf=\"currentOptions?.image\"\n        [style.height]=\"getImageHeight()\"\n        [images]=\"mediumImages\"\n        [clickable]=\"currentOptions?.preview\"\n        [selectedIndex]=\"selectedIndex\"\n        [arrows]=\"currentOptions?.imageArrows\"\n        [arrowsAutoHide]=\"currentOptions?.imageArrowsAutoHide\"\n        [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\"\n        [arrowNextIcon]=\"currentOptions?.arrowNextIcon\"\n        [swipe]=\"currentOptions?.imageSwipe\"\n        [animation]=\"currentOptions?.imageAnimation\"\n        [size]=\"currentOptions?.imageSize\"\n        [autoPlay]=\"currentOptions?.imageAutoPlay\"\n        [autoPlayInterval]=\"currentOptions?.imageAutoPlayInterval\"\n        [autoPlayPauseOnHover]=\"currentOptions?.imageAutoPlayPauseOnHover\"\n        [infinityMove]=\"currentOptions?.imageInfinityMove\"\n        [lazyLoading]=\"currentOptions?.lazyLoading\"\n        [actions]=\"currentOptions?.imageActions\"\n        [descriptions]=\"descriptions\"\n        [showDescription]=\"currentOptions?.imageDescription\"\n        [bullets]=\"currentOptions?.imageBullets\"\n        (clicked)=\"openPreview($event)\"\n        (activeChange)=\"selectFromImage($event)\"\n      ></ngx-gallery-image>\n\n      <ngx-gallery-thumbnails\n        *ngIf=\"currentOptions?.thumbnails\"\n        [style.marginTop]=\"getThumbnailsMarginTop()\"\n        [style.marginBottom]=\"getThumbnailsMarginBottom()\"\n        [style.height]=\"getThumbnailsHeight()\"\n        [images]=\"smallImages\"\n        [links]=\"currentOptions?.thumbnailsAsLinks ? links : []\"\n        [labels]=\"labels\"\n        [linkTarget]=\"currentOptions?.linkTarget\"\n        [selectedIndex]=\"selectedIndex\"\n        [columns]=\"currentOptions?.thumbnailsColumns\"\n        [rows]=\"currentOptions?.thumbnailsRows\"\n        [margin]=\"currentOptions?.thumbnailMargin\"\n        [arrows]=\"currentOptions?.thumbnailsArrows\"\n        [arrowsAutoHide]=\"currentOptions?.thumbnailsArrowsAutoHide\"\n        [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\"\n        [arrowNextIcon]=\"currentOptions?.arrowNextIcon\"\n        [clickable]=\"currentOptions?.image || currentOptions?.preview\"\n        [swipe]=\"currentOptions?.thumbnailsSwipe\"\n        [size]=\"currentOptions?.thumbnailSize\"\n        [moveSize]=\"currentOptions?.thumbnailsMoveSize\"\n        [order]=\"currentOptions?.thumbnailsOrder\"\n        [remainingCount]=\"currentOptions?.thumbnailsRemainingCount\"\n        [lazyLoading]=\"currentOptions?.lazyLoading\"\n        [actions]=\"currentOptions?.thumbnailActions\"\n        (activeChange)=\"selectFromThumbnails($event)\"\n      ></ngx-gallery-thumbnails>\n\n      <ngx-gallery-preview\n        [images]=\"bigImages\"\n        [descriptions]=\"descriptions\"\n        [showDescription]=\"currentOptions?.previewDescription\"\n        [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\"\n        [arrowNextIcon]=\"currentOptions?.arrowNextIcon\"\n        [closeIcon]=\"currentOptions?.closeIcon\"\n        [fullscreenIcon]=\"currentOptions?.fullscreenIcon\"\n        [spinnerIcon]=\"currentOptions?.spinnerIcon\"\n        [arrows]=\"currentOptions?.previewArrows\"\n        [arrowsAutoHide]=\"currentOptions?.previewArrowsAutoHide\"\n        [swipe]=\"currentOptions?.previewSwipe\"\n        [fullscreen]=\"currentOptions?.previewFullscreen\"\n        [forceFullscreen]=\"currentOptions?.previewForceFullscreen\"\n        [closeOnClick]=\"currentOptions?.previewCloseOnClick\"\n        [closeOnEsc]=\"currentOptions?.previewCloseOnEsc\"\n        [keyboardNavigation]=\"currentOptions?.previewKeyboardNavigation\"\n        [animation]=\"currentOptions?.previewAnimation\"\n        [autoPlay]=\"currentOptions?.previewAutoPlay\"\n        [autoPlayInterval]=\"currentOptions?.previewAutoPlayInterval\"\n        [autoPlayPauseOnHover]=\"currentOptions?.previewAutoPlayPauseOnHover\"\n        [infinityMove]=\"currentOptions?.previewInfinityMove\"\n        [zoom]=\"currentOptions?.previewZoom\"\n        [zoomStep]=\"currentOptions?.previewZoomStep\"\n        [zoomMax]=\"currentOptions?.previewZoomMax\"\n        [zoomMin]=\"currentOptions?.previewZoomMin\"\n        [zoomInIcon]=\"currentOptions?.zoomInIcon\"\n        [zoomOutIcon]=\"currentOptions?.zoomOutIcon\"\n        [actions]=\"currentOptions?.actions\"\n        [rotate]=\"currentOptions?.previewRotate\"\n        [rotateLeftIcon]=\"currentOptions?.rotateLeftIcon\"\n        [rotateRightIcon]=\"currentOptions?.rotateRightIcon\"\n        [download]=\"currentOptions?.previewDownload\"\n        [downloadIcon]=\"currentOptions?.downloadIcon\"\n        [bullets]=\"currentOptions?.previewBullets\"\n        (closed)=\"onPreviewClose()\"\n        (opened)=\"onPreviewOpen()\"\n        (activeChange)=\"previewSelect($event)\"\n        [class.ngx-gallery-active]=\"previewEnabled\"\n      ></ngx-gallery-preview>\n    </div>\n  `,\n  styleUrls: ['./ngx-gallery.component.scss'],\n  providers: [NgxGalleryHelperService]\n})\nexport class NgxGalleryComponent implements OnInit, DoCheck, AfterViewInit {\n  @Input() options: NgxGalleryOptions[];\n  @Input() images: NgxGalleryImage[];\n\n  @Output() imagesReady = new EventEmitter();\n  // tslint:disable-next-line: no-output-native\n  @Output() change = new EventEmitter<{\n    index: number;\n    image: NgxGalleryImage;\n  }>();\n  @Output() previewOpen = new EventEmitter();\n  @Output() previewClose = new EventEmitter();\n  @Output() previewChange = new EventEmitter<{\n    index: number;\n    image: NgxGalleryImage;\n  }>();\n\n  smallImages: string[] | SafeResourceUrl[];\n  mediumImages: NgxGalleryOrderedImage[];\n  bigImages: string[] | SafeResourceUrl[];\n  descriptions: string[];\n  links: string[];\n  labels: string[];\n\n  oldImages: NgxGalleryImage[];\n  oldImagesLength = 0;\n\n  selectedIndex = 0;\n  previewEnabled: boolean;\n\n  currentOptions: NgxGalleryOptions;\n\n  private breakpoint: number | undefined = undefined;\n  private prevBreakpoint: number | undefined = undefined;\n  private fullWidthTimeout: any;\n\n  @ViewChild(NgxGalleryPreviewComponent, { static: false })\n  preview: NgxGalleryPreviewComponent;\n  @ViewChild(NgxGalleryImageComponent, { static: false })\n  image: NgxGalleryImageComponent;\n  @ViewChild(NgxGalleryThumbnailsComponent, { static: false })\n  thubmnails: NgxGalleryThumbnailsComponent;\n\n  @HostBinding('style.width') width: string;\n  @HostBinding('style.height') height: string;\n  @HostBinding('style.left') left: string;\n\n  constructor(private myElement: ElementRef) {}\n\n  ngOnInit() {\n    this.options = this.options.map(opt => new NgxGalleryOptions(opt));\n    this.sortOptions();\n    this.setBreakpoint();\n    this.setOptions();\n    this.checkFullWidth();\n    if (this.currentOptions) {\n      this.selectedIndex = this.currentOptions.startIndex as number;\n    }\n  }\n\n  ngDoCheck(): void {\n    if ((this.images !== undefined && this.images.length !== this.oldImagesLength) || this.images !== this.oldImages) {\n      this.oldImagesLength = this.images.length;\n      this.oldImages = this.images;\n      this.setOptions();\n      this.setImages();\n\n      if (this.images && this.images.length) {\n        this.imagesReady.emit();\n      }\n\n      if (this.image) {\n        this.image.reset(this.currentOptions.startIndex as number);\n      }\n\n      if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails && this.images.length <= 1) {\n        this.currentOptions.thumbnails = false;\n        this.currentOptions.imageArrows = false;\n      }\n\n      this.resetThumbnails();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.checkFullWidth();\n  }\n\n  @HostListener('window:resize') onResize() {\n    this.setBreakpoint();\n\n    if (this.prevBreakpoint !== this.breakpoint) {\n      this.setOptions();\n      this.resetThumbnails();\n    }\n\n    if (this.currentOptions && this.currentOptions.fullWidth) {\n      if (this.fullWidthTimeout) {\n        clearTimeout(this.fullWidthTimeout);\n      }\n\n      this.fullWidthTimeout = setTimeout(() => {\n        this.checkFullWidth();\n      }, 200);\n    }\n  }\n\n  getImageHeight(): string {\n    return this.currentOptions && this.currentOptions.thumbnails ? this.currentOptions.imagePercent + '%' : '100%';\n  }\n\n  getThumbnailsHeight(): string {\n    if (this.currentOptions && this.currentOptions.image) {\n      return 'calc(' + this.currentOptions.thumbnailsPercent + '% - ' + this.currentOptions.thumbnailsMargin + 'px)';\n    } else {\n      return '100%';\n    }\n  }\n\n  getThumbnailsMarginTop(): string {\n    if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\n      return this.currentOptions.thumbnailsMargin + 'px';\n    } else {\n      return '0px';\n    }\n  }\n\n  getThumbnailsMarginBottom(): string {\n    if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\n      return this.currentOptions.thumbnailsMargin + 'px';\n    } else {\n      return '0px';\n    }\n  }\n\n  openPreview(index: number): void {\n    if (this.currentOptions.previewCustom) {\n      this.currentOptions.previewCustom(index);\n    } else {\n      this.previewEnabled = true;\n      this.preview.open(index);\n    }\n  }\n\n  onPreviewOpen(): void {\n    this.previewOpen.emit();\n\n    if (this.image && this.image.autoPlay) {\n      this.image.stopAutoPlay();\n    }\n  }\n\n  onPreviewClose(): void {\n    this.previewEnabled = false;\n    this.previewClose.emit();\n\n    if (this.image && this.image.autoPlay) {\n      this.image.startAutoPlay();\n    }\n  }\n\n  selectFromImage(index: number) {\n    this.select(index);\n  }\n\n  selectFromThumbnails(index: number) {\n    this.select(index);\n\n    if (\n      this.currentOptions &&\n      this.currentOptions.thumbnails &&\n      this.currentOptions.preview &&\n      (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)\n    ) {\n      this.openPreview(this.selectedIndex);\n    }\n  }\n\n  show(index: number): void {\n    this.select(index);\n  }\n\n  showNext(): void {\n    this.image.showNext();\n  }\n\n  showPrev(): void {\n    this.image.showPrev();\n  }\n\n  canShowNext(): boolean {\n    if (this.images && this.currentOptions) {\n      return this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1 ? true : false;\n    } else {\n      return false;\n    }\n  }\n\n  canShowPrev(): boolean {\n    if (this.images && this.currentOptions) {\n      return this.currentOptions.imageInfinityMove || this.selectedIndex > 0 ? true : false;\n    } else {\n      return false;\n    }\n  }\n\n  previewSelect(index: number) {\n    this.previewChange.emit({ index, image: this.images[index] });\n  }\n\n  moveThumbnailsRight() {\n    this.thubmnails.moveRight();\n  }\n\n  moveThumbnailsLeft() {\n    this.thubmnails.moveLeft();\n  }\n\n  canMoveThumbnailsRight() {\n    return this.thubmnails.canMoveRight();\n  }\n\n  canMoveThumbnailsLeft() {\n    return this.thubmnails.canMoveLeft();\n  }\n\n  private resetThumbnails() {\n    if (this.thubmnails) {\n      this.thubmnails.reset(this.currentOptions.startIndex as number);\n    }\n  }\n\n  private select(index: number) {\n    this.selectedIndex = index;\n\n    this.change.emit({\n      index,\n      image: this.images[index]\n    });\n  }\n\n  private checkFullWidth(): void {\n    if (this.currentOptions && this.currentOptions.fullWidth) {\n      this.width = document.body.clientWidth + 'px';\n      this.left = -(document.body.clientWidth - this.myElement.nativeElement.parentNode.innerWidth) / 2 + 'px';\n    }\n  }\n\n  private setImages(): void {\n    this.smallImages = this.images.map(img => img.small as string);\n    this.mediumImages = this.images.map(\n      (img, i) =>\n        new NgxGalleryOrderedImage({\n          src: img.medium,\n          index: i\n        })\n    );\n    this.bigImages = this.images.map(img => img.big as string);\n    this.descriptions = this.images.map(img => img.description as string);\n    this.links = this.images.map(img => img.url as string);\n    this.labels = this.images.map(img => img.label as string);\n  }\n\n  private setBreakpoint(): void {\n    this.prevBreakpoint = this.breakpoint;\n    let breakpoints;\n\n    if (typeof window !== 'undefined') {\n      breakpoints = this.options.filter(opt => opt.breakpoint >= window.innerWidth).map(opt => opt.breakpoint);\n    }\n\n    if (breakpoints && breakpoints.length) {\n      this.breakpoint = breakpoints.pop();\n    } else {\n      this.breakpoint = undefined;\n    }\n  }\n\n  private sortOptions(): void {\n    this.options = [\n      ...this.options.filter(a => a.breakpoint === undefined),\n      ...this.options.filter(a => a.breakpoint !== undefined).sort((a, b) => b.breakpoint - a.breakpoint)\n    ];\n  }\n\n  private setOptions(): void {\n    this.currentOptions = new NgxGalleryOptions({});\n\n    this.options\n      .filter(opt => opt.breakpoint === undefined || opt.breakpoint >= this.breakpoint)\n      .map(opt => this.combineOptions(this.currentOptions, opt));\n\n    this.width = this.currentOptions.width as string;\n    this.height = this.currentOptions.height as string;\n  }\n\n  private combineOptions(first: NgxGalleryOptions, second: NgxGalleryOptions) {\n    Object.keys(second).map(val => (first[val] = second[val] !== undefined ? second[val] : first[val]));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { NgxGalleryActionComponent } from './ngx-gallery-action.component';\nimport { NgxGalleryArrowsComponent } from './ngx-gallery-arrows.component';\nimport { NgxGalleryBulletsComponent } from './ngx-gallery-bullets.component';\nimport { NgxGalleryImageComponent } from './ngx-gallery-image.component';\nimport { NgxGalleryPreviewComponent } from './ngx-gallery-preview.component';\nimport { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails.component';\nimport { NgxGalleryComponent } from './ngx-gallery.component';\n\nexport * from './ngx-gallery-action.component';\nexport * from './ngx-gallery-action.model';\nexport * from './ngx-gallery-animation.model';\nexport * from './ngx-gallery-arrows.component';\nexport * from './ngx-gallery-bullets.component';\nexport * from './ngx-gallery-helper.service';\nexport * from './ngx-gallery-image-size.model';\nexport * from './ngx-gallery-image.component';\nexport * from './ngx-gallery-image.model';\nexport * from './ngx-gallery-layout.model';\nexport * from './ngx-gallery-options.model';\nexport * from './ngx-gallery-order.model';\nexport * from './ngx-gallery-ordered-image.model';\nexport * from './ngx-gallery-preview.component';\nexport * from './ngx-gallery-thumbnails.component';\nexport * from './ngx-gallery.component';\n\nexport class CustomHammerConfig extends HammerGestureConfig {\n  overrides = {\n    pinch: { enable: false },\n    rotate: { enable: false }\n  } as any;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    NgxGalleryActionComponent,\n    NgxGalleryArrowsComponent,\n    NgxGalleryBulletsComponent,\n    NgxGalleryImageComponent,\n    NgxGalleryThumbnailsComponent,\n    NgxGalleryPreviewComponent,\n    NgxGalleryComponent\n  ],\n  exports: [NgxGalleryComponent],\n  providers: [{ provide: HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }]\n})\nexport class NgxGalleryModule {}\n"]}