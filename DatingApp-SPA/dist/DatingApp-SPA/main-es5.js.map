{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_guards/auth.guard.ts","webpack:///src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///src/app/_models/pagination.ts","webpack:///src/app/_resolvers/lists.resolver.ts","webpack:///src/app/_resolvers/member-detail.resolver.ts","webpack:///src/app/_resolvers/member-edit.resolver.ts","webpack:///src/app/_resolvers/member-list.resolver.ts","webpack:///src/app/_resolvers/messages.resolver.ts","webpack:///src/app/_services/alertify.service.ts","webpack:///src/app/_services/auth.service.ts","webpack:///src/app/_services/error.interceptor.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/lists/lists.component.ts","webpack:///src/app/lists/lists.component.html","webpack:///src/app/members/member-card/member-card.component.ts","webpack:///src/app/members/member-card/member-card.component.html","webpack:///src/app/members/member-detail/member-detail.component.ts","webpack:///src/app/members/member-detail/member-detail.component.html","webpack:///src/app/members/member-edit/member-edit.component.ts","webpack:///src/app/members/member-edit/member-edit.component.html","webpack:///src/app/members/member-list/member-list.component.ts","webpack:///src/app/members/member-list/member-list.component.html","webpack:///src/app/members/member-messages/member-messages.component.ts","webpack:///src/app/members/member-messages/member-messages.component.html","webpack:///src/app/members/photo-editor/photo-editor.component.ts","webpack:///src/app/members/photo-editor/photo-editor.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/routes.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","authService","router","alertify","loggedIn","error","navigate","providedIn","PrevenUnsavedChanges","component","editForm","dirty","confirm","PaginatedResult","ListsResolver","userService","pageNumber","pageSize","likesParam","route","getUsers","pipe","MemberDetailResolver","getUser","params","MemberEditResolver","decodedToken","nameid","MemberListResolver","MessagesResolver","messageContainer","getMessages","AlertifyService","message","okCallBack","AuthService","http","baseUrl","apiUrl","jwtHelper","photoUrl","currentPhotoUrl","asObservable","next","model","post","response","user","localStorage","setItem","token","JSON","stringify","decodeToken","currentUser","changeMemberPhoto","getItem","isTokenExpired","ErrorInterceptor","handle","status","statusText","applicationError","headers","get","serverError","modalStateErrors","errors","key","ErrorInterceptorProvider","provide","useClass","multi","UserService","page","itemsPerPage","userParams","paginatedResult","append","minAge","maxAge","gender","orderBy","observe","result","body","pagination","parse","put","userId","recipientId","messageId","subscribe","AppComponent","selector","templateUrl","styleUrls","tokenGetter","CustomerHammerConfig","overrides","pinch","enable","rotate","AppModule","forRoot","config","whitelistedDomains","blacklistedRoutes","declarations","imports","providers","bootstrap","HomeComponent","registerMode","ListsComponent","data","users","currentPage","res","event","loadUsers","pageChanged","MemberCardComponent","sendLike","success","knownAs","MemberDetailComponent","queryParams","selectTab","memberTabs","tabs","active","galleryOptions","width","height","imagePercent","thumbnailsColumns","imageAnimation","Slide","preview","galleryImages","getImages","imageUrls","photos","photo","push","small","url","medium","big","description","tabId","MemberEditComponent","$event","returnValue","updateUser","reset","updateMainPhoto","MemberListComponent","genderList","value","display","resetFilters","MemberMessagesComponent","newMessage","loadMessages","currentUserId","getMessageThread","messages","i","length","isRead","markAsRead","sendMessage","unshift","content","uploader","PhotoEditorComponent","getMemberPhotoChange","hasBaseDropZoneOver","initializeUploader","authToken","allowedFileType","removeAfterUpload","autoUpload","maxFileSize","onAfterAddingFile","file","withCredentials","onSuccessItem","item","dateAdded","isMain","setMainPhoto","currenMain","filter","p","deletePhoto","splice","findIndex","fileOverBase","stopPropagation","MessagesComponent","deleteMessage","m","NavComponent","login","removeItem","RegisterComponent","fb","cancelRegister","bsConfig","containerClass","createRegisterForm","registerForm","group","username","required","dateOfBirth","city","country","password","minLength","maxLength","confirmPassword","validators","passwordMatchValidator","g","mismatch","valid","Object","assign","register","emit","cancel","appRoutes","path","runGuardsAndResolvers","canActivate","children","canDeactivate","redirectTo","pathMatch","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, Router} from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService, \n    private router: Router, \n    private alertify: AlertifyService\n    ) {}\n \n \n     canActivate(): boolean {\n      if (this.authService.loggedIn()) {\n        return true;\n      }\n\n      this.alertify.error('You shall not pass!!!');\n      this.router.navigate(['/home']);\n      return false;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\n\r\n@Injectable()\r\nexport class PrevenUnsavedChanges implements CanDeactivate<MemberEditComponent> {\r\n    canDeactivate(component: MemberEditComponent) {\r\n        if (component.editForm.dirty) {\r\n            return confirm('Are you sure you want to continue? Any unsaved changes will be lost');\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n    result: T;\n    pagination: Pagination;\n}\n","import {Injectable} from '@angular/core';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ListsResolver implements Resolve<User[]> {\r\n    pageNumber = 1;\r\n    pageSize =  5;\r\n    likesParam = 'Likers';\r\n\r\n    constructor(private userService: UserService,\r\n                private router: Router, private alertify: AlertifyService) {}\r\n\r\n                resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n                    return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\r\n                        catchError(error => {\r\n                            this.alertify.error('Problem retrieving data');\r\n                            this.router.navigate(['/home']);\r\n                            return of(null);\r\n                        })\r\n                    );\r\n                }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n    constructor(private userService: UserService,\r\n                private router: Router, private alertify: AlertifyService) {}\r\n\r\n                resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n                    return this.userService.getUser(route.params.id).pipe(\r\n                        catchError(error => {\r\n                            this.alertify.error('Problem retrieving data');\r\n                            this.router.navigate(['/members']);\r\n                            return of(null);\r\n                        })\r\n                    );\r\n                }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n    constructor(private userService: UserService, private authService: AuthService,\r\n                private router: Router, private alertify: AlertifyService) {}\r\n\r\n                resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n                    return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n                        catchError(error => {\r\n                            this.alertify.error('Problem retrieving your data');\r\n                            this.router.navigate(['/members']);\r\n                            return of(null);\r\n                        })\r\n                    );\r\n                }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n    pageNumber = 1;\r\n    pageSize =  5;\r\n\r\n    constructor(private userService: UserService,\r\n                private router: Router, private alertify: AlertifyService) {}\r\n\r\n                resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n                    return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n                        catchError(error => {\r\n                            this.alertify.error('Problem retrieving data');\r\n                            this.router.navigate(['/home']);\r\n                            return of(null);\r\n                        })\r\n                    );\r\n                }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { Message } from '../_models/message';\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]> {\r\n    pageNumber = 1;\r\n    pageSize =  5;\r\n    messageContainer = 'Unread';\r\n\r\n    constructor(private userService: UserService, private authService: AuthService,\r\n                private router: Router, private alertify: AlertifyService) {}\r\n\r\n                resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\r\n                    return this.userService.getMessages(this.authService.decodedToken.nameid,\r\n                        this.pageNumber, this.pageSize, this.messageContainer).pipe(\r\n                        catchError(error => {\r\n                            this.alertify.error('Problem retrieving messages');\r\n                            this.router.navigate(['/home']);\r\n                            return of(null);\r\n                        })\r\n                    );\r\n                }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport * as alertify from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\nconstructor() { }\n\n  confirm(message: string, okCallBack: () => any) {\n    alertify.confirm(message, (e: any) => {\n      if (e) {\n        okCallBack();\n      }\n      else{}\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  warning(message: string) {\n      alertify.warning(message);\n  }\n\n  message(message: string) {\n        alertify.message(message);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport { from } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = environment.apiUrl + 'auth/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n\nconstructor(private http: HttpClient) { }\n\nchangeMemberPhoto(photoUrl: string) {\n  this.photoUrl.next(photoUrl);\n}\n\n\nlogin(model: any){\n  return this.http.post(this.baseUrl + 'login', model)\n .pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('token', user.token);\n          localStorage.setItem('user', JSON.stringify(user.user));\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          this.currentUser = user.user;\n          this.changeMemberPhoto(this.currentUser.photoUrl);\n        }\n      })\n    );\n  }\n\n  register(user: User) {\n    return this.http.post(this.baseUrl + 'register', user);\n  }\n\n  loggedIn(){\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: import('@angular/common/http').HttpRequest<any>,\r\n    next: import('@angular/common/http').HttpHandler\r\n  ): import('rxjs').Observable<import('@angular/common/http').HttpEvent<any>> {\r\n   return next.handle(req).pipe(\r\n       catchError(error => {\r\n           if (error.status === 401){\r\n               return throwError(error.statusText);\r\n           }\r\n           if (error instanceof HttpErrorResponse){\r\n               const applicationError = error.headers.get('Application-Error');\r\n               if (applicationError){\r\n                   return throwError(applicationError);\r\n               }\r\n               const serverError = error.error;\r\n               let modalStateErrors = '';\r\n               if (serverError.errors && typeof serverError.errors === 'object'){\r\n                   for (const key in serverError.errors) {\r\n                       if (serverError.errors[key]){\r\n                           modalStateErrors += serverError.errors[key] + '\\n';\r\n                       }\r\n                   }\r\n               }\r\n               return throwError(modalStateErrors || serverError || 'Server Error');\r\n           }\r\n       })\r\n   );\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { PaginatedResult } from '../_models/pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from '../_models/message';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl = environment.apiUrl;\n\nconstructor(private http: HttpClient) { }\n\n  getUsers(page?, itemsPerPage?, userParams?, likesParam?): Observable<PaginatedResult<User[]>> {\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\n\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    if (userParams != null)\n    {\n      params = params.append('minAge', userParams.minAge);\n      params = params.append('maxAge', userParams.maxAge);\n      params = params.append('gender', userParams.gender);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    if (likesParam === 'Likers') {\n      params = params.append('likers', 'true');\n    }\n\n    if (likesParam === 'Likees') {\n      params = params.append('likees', 'true');\n    }\n\n    return this.http.get<User[]>(this.baseUrl + 'users', { observe: 'response', params})\n    .pipe(\n      map(response => {\n        paginatedResult.result = response.body;\n        if (response.headers.get('Pagination') != null) {\n          paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n        }\n        return paginatedResult;\n      })\n    );\n  }\n\n  getUser(id): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\n  }\n\n  updateUser(id: number, user: User) {\n    return this.http.put(this.baseUrl + 'users/' + id, user);\n  }\n\n  setMainPhoto(userId: number, id: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain/', {});\n  }\n\n  deletePhoto(userId: number, id: number) {\n    return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\n  }\n\n  sendLike(id: number, recipientId: number) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/like/' + recipientId, {});\n  }\n\n    getMessages(id: number, page?, itemsPerPage?, messageContainer?) {\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\n\n    let params = new HttpParams();\n\n    params = params.append('MessageContainer', messageContainer);\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages', {observe: 'response', params})\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') !== null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n\n          return paginatedResult;\n        })\n      );\n  }\n\n  getMessageThread(id: number, recipientId: number) {\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages/thread/' + recipientId);\n  }\n\n  sendMessage(id: number, message: Message) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message);\n  }\n\n  deleteMessage(id: number, userId: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + id, {});\n  }\n\n  markAsRead(userId: number, messageId: number) {\n    this.http.post(this.baseUrl + 'users/' + userId + '/messages/'\n      + messageId + '/read', {}).subscribe();\n  }\n}\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  implements OnInit{\n   jwtHelper = new JwtHelperService();\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n    if (user) {\n      this.authService.currentUser = user;\n      this.authService.changeMemberPhoto(user.photoUrl);\n    }\n  }\n}\n","<app-nav></app-nav>\n<router-outlet></router-outlet>\n\n\n\n\n\n\n\n \n  \n  \n\n  \n\n \n\n   \n   \n \n\n \n\n\n\n\n","import { BrowserModule, HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport {TabsModule} from 'ngx-bootstrap/tabs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { NgxGalleryModule } from 'ngx-gallery-9';\nimport { FileUploadModule } from 'ng2-file-upload';\n\n\nimport { AppComponent } from './app.component';\nimport { from } from 'rxjs';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './_services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { appRoutes } from './routes';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\nimport { PrevenUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { ListsResolver } from './_resolvers/lists.resolver';\nimport { MessagesResolver } from './_resolvers/messages.resolver';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\n\n\nexport function tokenGetter() {\n   return localStorage.getItem('token');\n}\nexport class CustomerHammerConfig extends HammerGestureConfig {\n   overrides = {\n      pinch: {enable: false},\n      rotate: { enable: false}\n   };\n}\n\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      HomeComponent,\n      RegisterComponent,\n      MemberListComponent,\n      ListsComponent,\n      MessagesComponent,\n      MemberCardComponent,\n      MemberDetailComponent,\n      MemberEditComponent,\n      PhotoEditorComponent,\n      MemberMessagesComponent\n   ],\n   imports: [\n      BrowserModule,\n      TimeagoModule.forRoot(),\n      BrowserAnimationsModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n      BsDropdownModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      PaginationModule.forRoot(),\n      ButtonsModule.forRoot(),\n      TabsModule.forRoot(),\n      BrowserAnimationsModule,\n      RouterModule.forRoot(appRoutes),\n      NgxGalleryModule,\n      FileUploadModule,\n      JwtModule.forRoot({\n         config: {\n            tokenGetter,\n            whitelistedDomains: ['localhost:5000'],\n            blacklistedRoutes: ['localhost:5000/api/auth']\n         }\n       })\n   ],\n   providers: [\n      ErrorInterceptorProvider,\n      MemberDetailResolver,\n      MemberListResolver,\n      MemberEditResolver,\n      PrevenUnsavedChanges,\n      ListsResolver,\n      { provide: HAMMER_GESTURE_CONFIG, useClass: CustomerHammerConfig},\n      MessagesResolver\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n  }\n\n  registerToggle(){\n    this.registerMode = true;\n  }\n\n  cancelRegisterMode(registerMode: boolean){\n    this.registerMode = registerMode;\n  }\n\n}\n","<div class=\"container mt-5\">\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n  <h1>Find your match</h1>\n  <p class=\"lead\">Come on in to view your matches... All you need to do is sign up!</p>\n  <div class=\"text-center\">\n    <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"registerToggle()\">Register</button>\n    <button class=\"btn btn-info btn-lg\">Learn More</button>\n  </div>\n</div>\n</div>\n\n\n<div *ngIf=\"registerMode\" class=\"container\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-4\">\n      <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n    </div>\n </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/user';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/auth.service';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(private authService: AuthService,\n              private userService: UserService,\n              private route: ActivatedRoute,\n              private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      // tslint:disable-next-line: no-string-literal\n      this.users = data['users'].result;\n      // tslint:disable-next-line: no-string-literal\n      this.pagination = data['users'].pagination;\n    });\n    this.likesParam = 'Likers';\n  }\n\n\n  loadUsers() {\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n    .subscribe((res: PaginatedResult<User[]>) => {\n      this.users = res.result;\n      this.pagination = res.pagination;\n    // tslint:disable-next-line: no-shadowed-variable\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n}\n","<div class=\"text-center mt-3\">\n  <h2>{{likesParam === 'Likers' ? 'Likers' : 'Likes'}} : {{pagination.totalItems}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n\n<div class=\"row\">\n  <div class=\"btn-group\">\n    <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likers\"\n      (click)=\"loadUsers()\">Likers</button>\n    <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likees\"\n      (click)=\"loadUsers()\">Likes</button>\n  </div>\n</div>\n\n<br>\n\n<div class=\"row\">\n  <div *ngFor=\"let user of users\" class=\"col-sm-6 col-md-4 col-lg-4 col-xl-2\">\n    <app-member-card [user]=\"user\"></app-member-card>\n  </div>\n</div>\n\n\n\n</div>\n\n<div class=\"d-flex justify-content-center\">\n<pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\"\n  [itemsPerPage]=\"pagination.itemsPerPage\" [(ngModel)]=\"pagination.currentPage\"\n  (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\"\n  firstText=\"&laquo;\" lastText=\"&raquo;\">\n\n</pagination>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n\n  constructor(private authService: AuthService,\n              private userService: UserService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  sendLike(id: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data => {\n      this.alertify.success('You have liked  ' + this.user.knownAs);\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n}\n","<div class=\"card mb-4\">\n  <div class=\"card-img-wrapper\">\n    <img class=\"card-img-top\" src=\"{{user.photoUrl || '../../../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\">\n    <ul class=\"list-inline member-icons animate text-center\">\n      <li class=\"list-inline-item\"><button class=\"btn-primary\" \n        [routerLink]=\"['/members/',user.id]\" ><i class=\"fa fa-user\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn-primary\" (click)=\"sendLike(user.id)\"><i class=\"fa fa-heart\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn-primary\" \n        [routerLink]=\"['/members', user.id]\" [queryParams]=\"{tab: 3}\"><i class=\"fa fa-envelope\"></i></button></li>\n    </ul>\n  </div>\n  <div class=\"card-body p-1\">\n    <h6 class=\"card-title text-center mb-1\"><i class=\"fa fa-user\"></i>\n        {{user.knownAs}}, {{user.age}}\n    </h6>\n    <p class=\"card-text text-muted text-center\">{{user.city}}</p>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery-9';\nimport { TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { from } from 'rxjs';\n\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  @ViewChild('memberTabs', {static: true}) memberTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n\n  constructor(private userService: UserService, private alertify: AlertifyService,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data.user;\n    });\n\n    this.route.queryParams.subscribe(params => {\n      // tslint:disable-next-line: no-string-literal\n      const selectTab = params['tab'];\n      this.memberTabs.tabs[selectTab > 0 ? selectTab : 0].active = true;\n    });\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      }\n    ];\n    this.galleryImages = this.getImages();\n  }\n\n  getImages() {\n    const imageUrls = [];\n    for (const photo of this.user.photos) {\n      imageUrls.push({\n        small: photo.url,\n        medium: photo.url,\n        big: photo.url,\n        description: photo.description\n      });\n    }\n    return imageUrls;\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n}\n\n\n\n","<div class=\"container mt-4\">\n  <div class=\"row\">\n    <h1>{{user.knownAs}}'s Profile</h1>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-lg-4 col-md-4 col-sm-6\">\n      <div class=\"card\">\n        <img class=\"card-img-top img-thumbnail\" src=\"{{user.photoUrl || '../../../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\">\n        <div class=\"card-body\">\n          <div>\n            <strong>Location :</strong>\n            <p>{{user.city}}, {{user.country}}</p>\n          </div>\n          <div>\n            <strong>Age :</strong>\n            <p>{{user.age}}</p>\n          </div>\n          <div>\n            <strong>Last Active :</strong>\n            <p>{{user.lastActive | timeago}}</p>\n          </div>\n          <div>\n            <strong>Member since :</strong>\n            <p>{{user.created | date: 'mediumDate'}}</p>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"btn-group d-flex\">\n            <button class=\"btn btn-primary w-100\">Like</button>\n            <button class=\"btn btn-success w-100\" (click)=\"selectTab(3)\">Message</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-8\">\n      <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\" #memberTabs>\n          <tab heading=\"About {{user.knownAs}}\">\n            <h4>Description</h4>\n            <p>{{user.introduction}}</p>\n            <h4>Looking For</h4>\n            <p>{{user.lookingFor}}</p>\n          </tab>\n          <tab heading=\"Interests\">\n            <h4>Interests</h4>\n            <p>{{user.interests}}</p>\n          </tab>\n          <tab heading=\"Photos\">\n            <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"></ngx-gallery>\n         </tab>\n          <tab heading=\"Messages\">\n            <app-member-messages [recipientId]=\"user.id\"></app-member-messages>\n          </tab>\n        </tabset>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm', {static: true})editForm: NgForm;\n  user: User;\n  photoUrl: string;\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n\n  constructor(private route: ActivatedRoute, private alertify: AlertifyService,\n              private userService: UserService, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data.user;\n    });\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  updateUser() {\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user).subscribe(next => {\n      this.alertify.success('Profile updated successfully');\n      this.editForm.reset(this.user);\n    }, error => {\n      this.alertify.error(error);\n    });\n\n  }\n\n  updateMainPhoto(photoUrl) {\n    this.user.photoUrl = photoUrl;\n  }\n\n}\n","<div class=\"container mt-4\">\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <h1>Your Profile</h1>\n    </div>\n   <div class=\"col-sm-8\">\n     <div *ngIf=\"editForm.dirty\" class=\"alert alert-info\">\n       <strong>Information :</strong> You have made changes. Any unsaved changes will be lost!!!\n     </div>\n   </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-lg-4 col-md-4 col-sm-6\">\n      <div class=\"card\">\n        <img class=\"card-img-top img-thumbnail\" src=\"{{photoUrl || '../../../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\">\n        <div class=\"card-body\">\n          <div>\n            <strong>Location :</strong>\n            <p>{{user.city}}, {{user.country}}</p>\n          </div>\n          <div>\n            <strong>Age :</strong>\n            <p>{{user.age}}</p>\n          </div>\n          <div>\n            <strong>Last Active :</strong>\n            <p>{{user.lastActive | timeago}}</p>\n          </div>\n          <div>\n            <strong>Member since :</strong>\n            <p>{{user.created | date: 'mediumDate'}}</p>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <button [disabled]=\"!editForm.dirty\" form=\"editForm\" class=\"btn btn-success btn-block\">Save Changes</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-8\">\n      <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\">\n          <tab heading=\"Edit Profile\">\n            <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateUser()\">\n              <h4>Description</h4>\n              <textarea name=\"introduction\"rows=\"6\" class=\"form-control\" \n              [(ngModel)]=\"user.introduction\"></textarea>\n              <h4>Looking For</h4>\n              <textarea name=\"lookingFor\"rows=\"6\" class=\"form-control\" \n              [(ngModel)]=\"user.lookingFor\"></textarea>\n              <h4>Interests</h4>\n              <textarea name=\"interests\"rows=\"6\" class=\"form-control\" \n              [(ngModel)]=\"user.interests\"></textarea>\n              <h4>Location Details :</h4>\n              <div class=\"form-inline\">\n                  <label for=\"city\">City</label>\n                  <input type=\"form-control\" type=\"text\" name=\"city\"[(ngModel)]=\"user.city\">\n                  <label for=\"country\">Country</label>\n                  <input type=\"form-control\" type=\"text\" name=\"country\"[(ngModel)]=\"user.country\">\n              </div>\n            </form>\n          \n          </tab>\n          <tab heading=\"Edit Photos\">\n           <app-photo-editor [photos]=\"user.photos\" \n           (getMemberPhotoChange)=\"updateMainPhoto($event)\"></app-photo-editor>\n          </tab>\n        </tabset>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginatedResult } from 'src/app/_models/pagination';\nimport { error } from '@angular/compiler/src/util';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  user: User = JSON.parse(localStorage.getItem('user'));\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\n  userParams: any = {};\n  pagination: Pagination;\n\n  constructor(private userService: UserService, private alertify: AlertifyService,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data.users.result;\n      // tslint:disable-next-line: no-string-literal\n      this.pagination = data['users'].pagination;\n    });\n\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.userParams.orderBy = 'lastActive';\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  resetFilters() {\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n    .subscribe((res: PaginatedResult<User[]>) => {\n      this.users = res.result;\n      this.pagination = res.pagination;\n    // tslint:disable-next-line: no-shadowed-variable\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n\n  <form class=\"form-inline\" #form=\"ngForm\" (ngSubmit)=\"loadUsers()\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"minAge\">Age From</label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"minAge\" \n      [(ngModel)]=\"userParams.minAge\" name=\"minAge\">\n    </div>\n  \n    <div class=\"form-group px-2\">\n      <label for=\"maxAge\">Age To</label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"maxAge\" \n      [(ngModel)]=\"userParams.maxAge\" name=\"maxAge\">\n    </div>\n  \n    <div class=\"form-group px-2\">\n      <label for=\"gender\">Show: </label>\n      <select class=\"form-control ml-1\" style=\"width: 130px\" id=\"gender\" \n      [(ngModel)]=\"userParams.gender\" name=\"gender\">\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n          {{gender.display}}\n        </option>\n      </select>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-left:10px\">Apply Filters</button>\n    <button type=\"button\" class=\"btn btn-info\" (click)=\"resetFilters()\" style=\"margin-left:10px\">Reset Filter</button>\n  \n    <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" \n              [(ngModel)]=\"userParams.orderBy\" (click)=\"loadUsers()\" btnRadio=\"lastActive\">Last Active</button>\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" \n              [(ngModel)]=\"userParams.orderBy\" (click)=\"loadUsers()\" btnRadio=\"created\">Newest Members</button>\n      </div>\n    </div>\n\n  </form>\n  <br>\n\n  <div class=\"row\">\n    <div *ngFor=\"let user of users\" class=\"col-lg-2 col-md-3 col-sm-6\">\n      <app-member-card [user]=\"user\"></app-member-card>\n    </div>  \n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination [boundaryLinks]=\"true\" \n              [totalItems]=\"pagination.totalItems\"\n              [itemsPerPage]=\"pagination.itemsPerPage\"\n              [(ngModel)]=\"pagination.currentPage\"\n              (pageChanged)=\"pageChanged($event)\"\n            previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n \n</pagination>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/_models/message';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { tap } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recipientId: number;\n  messages: Message[];\n  newMessage: any = {};\n\n  constructor(private userService: UserService,\n              private authService: AuthService,\n              private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService.getMessageThread(this.authService.decodedToken.nameid,\n      this.recipientId).pipe(\n        tap(messages => {\n          // tslint:disable-next-line: prefer-for-of\n          for (let i = 0; i < messages.length; i++) {\n            // tslint:disable-next-line: triple-equals\n            if (messages[i].isRead == false && messages[i].recipientId === currentUserId) {\n              this.userService.markAsRead(currentUserId, messages[i].id);\n            }\n          }\n        })\n      )\n      .subscribe(messages => {\n        this.messages = messages;\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n  sendMessage() {\n    this.newMessage.recipientId = this.recipientId;\n    this.userService.sendMessage(this.authService.decodedToken.nameid,\n      this.newMessage).subscribe((message: Message) => {\n        this.messages.unshift(message);\n        this.newMessage.content = '';\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <div *ngIf=\"messages?.length === 0\">\n      <p>No messages yet... Say hi by using the message box below</p>\n    </div>\n\n    <ul class=\"chat\">\n      <li *ngFor=\"let message of messages\">\n        <!-- to them -->\n        <div *ngIf=\"message.senderId == recipientId\">\n          <span class=\"chat-img float-left\">\n            <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderKnownAs}}\"\n              class=\"rounded-circle\">\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <strong class=\"primary-font\">{{message.senderKnownAs}}</strong>\n              <small class=\"text-muted float-right\">\n                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\n              </small>\n            </div>\n            <p>{{message.content}}</p>\n          </div>\n        </div>\n\n        <!-- to me -->\n        <div *ngIf=\"message.senderId != recipientId\">\n          <span class=\"chat-img float-right\">\n            <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderKnownAs}}\"\n              class=\"rounded-circle\">\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <small class=\"text-muted\">\n                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\n                <span *ngIf=\"!message.isRead\" class=\"text-danger\">(unread)</span>\n                <span *ngIf=\"message.isRead\" class=\"text-success\">(Read {{message.dateRead | timeago}} )</span>\n              </small>\n              <strong class=\"primary-font float-right\">{{message.senderKnownAs}}</strong>\n            </div>\n            <p>{{message.content}}</p>\n          </div>\n        </div>\n      </li>\n    </ul>\n\n  </div>\n  <div class=\"card-footer\">\n    <form #messageForm=\"ngForm\" (ngSubmit)=\"messageForm.valid && sendMessage()\">\n      <div class=\"input-group\">\n        <input type=\"text\"\n        [(ngModel)]=\"newMessage.content\"\n        name=\"content\"\n        required\n          class=\"form-control input-sm\"\n          placeholder=\"send a private message\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-primary\" [disabled]=\"!messageForm.valid\">Send</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Photo } from 'src/app/_models/photo';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment} from '../../../environments/environment';\nimport { from } from 'rxjs';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { error } from 'protractor';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  currenMain: Photo;\n\n  constructor(private authService: AuthService, private userService: UserService,\n              private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n    fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {file.withCredentials = false; };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain\n        };\n        this.photos.push(photo);\n        if (photo.isMain) {\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n        }\n      }\n    };\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(() => {\n      this.currenMain = this.photos.filter(p => p.isMain === true)[0];\n      this.currenMain.isMain = false;\n      photo.isMain = true;\n      this.authService.changeMemberPhoto(photo.url);\n      this.authService.currentUser.photoUrl = photo.url;\n      localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n    // tslint:disable-next-line: no-shadowed-variable\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  deletePhoto(id: number) {\n    this.alertify.confirm('Are you sure you want to delete this photo?' , () => {\n      this.userService.deletePhoto(this.authService.decodedToken.nameid, id).subscribe(() => {\n        this.photos.splice(this.photos.findIndex(p => p.id === id), 1);\n        this.alertify.success('Photo has been deleted');\n      // tslint:disable-next-line: no-shadowed-variable\n      }, error => {\n        this.alertify.error('Failed to delete the photo');\n      });\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\">\n    <img src=\"{{photo.url}}\" class=\"img-thumbnail p-1\" alt=\"\">\n    <div class=\"text-center\">\n      <button type=\"button\" class=\"btn btn-sm mr-1\" \n      (click)=\"setMainPhoto(photo)\" \n      [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-secondary'\"\n      [disabled]=\"photo.isMain\">Main</button>\n      <button type=\"button\" class=\"btn btn-sm btn-danger\" \n      (click)=\"deletePhoto(photo.id)\"\n      [disabled]=\"photo.isMain\"><i class=\"fa fa-trash-o\"></i>\n    </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n \n  <div class=\"col-md-3\">\n\n      <h3>Add Photos</h3>\n\n      <div ng2FileDrop\n           [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n           (fileOver)=\"fileOverBase($event)\"\n           [uploader]=\"uploader\"\n           class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n           <i class=\"fa fa-upload fa-3x\"></i>\n          Drop Photos Here\n      </div>\n\n      Multiple\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n      Single\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n      <h3>Upload queue</h3>\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n      <table class=\"table\">\n          <thead>\n          <tr>\n              <th width=\"50%\">Name</th>\n              <th>Size</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let item of uploader.queue\">\n              <td><strong>{{ item?.file?.name }}</strong></td>\n              <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n              \n          </tr>\n          </tbody>\n      </table> \n   <div>\n          <div>\n              Queue progress:\n              <div class=\"progress mb-4\">\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n              </div>\n          </div>\n          <button type=\"button\" class=\"btn btn-success btn-s\"\n                  (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n              <span class=\"fa fa-upload\"></span> Upload all\n          </button>\n          <button type=\"button\" class=\"btn btn-warning btn-s\"\n                  (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n              <span class=\"fa fa-ban\"></span> Cancel all\n          </button>\n          <button type=\"button\" class=\"btn btn-danger btn-s\"\n                  (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n              <span class=\"fa fa-trash\"></span> Remove all\n          </button>\n      </div>\n\n  </div>\n\n</div>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(private userService: UserService,\n              private authService: AuthService, private route: ActivatedRoute,\n              private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      // tslint:disable-next-line: no-string-literal\n      this.messages = data['messages'].result;\n      // tslint:disable-next-line: no-string-literal\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages() {\n    this.userService.getMessages(this.authService.decodedToken.nameid,\n        this.pagination.currentPage, this.pagination.itemsPerPage,\n        this.messageContainer).subscribe((res: PaginatedResult<Message[]>) => {\n          this.messages = res.result;\n          this.pagination = res.pagination;\n        }, error => {\n          this.alertify.error(error);\n        });\n  }\n\n  deleteMessage(id: number) {\n    this.alertify.confirm('Are you sure you want to delete this message?', () => {\n      this.userService.deleteMessage(id, this.authService.decodedToken.nameid)\n      .subscribe(() => {\n        this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n        this.alertify.success('Message has been deleted!');\n      }, error => {\n        this.alertify.error('Failed to delete the message');\n      });\n    });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n\n}\n","  \n\n<div class=\"container mt-5\">\n  <div class=\"row\">\n    <div class=\"btn-group\">\n      <button class=\"btn btn-primary\" [(ngModel)]=\"messageContainer\" btnRadio=\"Unread\" (click)=\"loadMessages()\">\n        <i class=\"fa fa-envelope\"></i> Unread\n      </button>\n      <button class=\"btn btn-primary\" [(ngModel)]=\"messageContainer\" btnRadio=\"Inbox\" (click)=\"loadMessages()\">\n        <i class=\"fa fa-envelope-open\"></i> Inbox\n      </button>\n      <button class=\"btn btn-primary\" [(ngModel)]=\"messageContainer\" btnRadio=\"Outbox\" (click)=\"loadMessages()\">\n        <i class=\"fa fa-paper-plane\"></i> Outbox\n      </button>\n    </div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"messages.length == 0\">\n    <h3>No messages</h3>\n  </div>\n\n  <div class=\"row\" *ngIf=\"messages.length > 0\">\n    <table class=\"table table-hover\" style=\"cursor: pointer\">\n      <tr>\n        <th style=\"width: 40%\">Message</th>\n        <th style=\"width: 20%\">From / To</th>\n        <th style=\"width: 20%\">Sent / Received</th>\n        <th style=\"width: 20%\"></th>\n      </tr>\n      <tr *ngFor=\"let message of messages\" [routerLink]=\"['/members', \n        messageContainer == 'Outbox' ? message.recipientId : message.senderId]\" \n          [queryParams]=\"{tab: 3}\">\n        <td>{{message.content}}</td>\n        <td>\n          <div *ngIf=\"messageContainer != 'Outbox'\">\n                <img src={{message?.senderPhotoUrl}} class=\"img-circle rounded-circle mr-1\">\n                <strong>{{message.senderKnownAs}}</strong>\n          </div>\n          <div *ngIf=\"messageContainer == 'Outbox'\">\n                <img src={{message?.recipientPhotoUrl}} class=\"img-circle rounded-circle mr-1\">\n                <strong>{{message.recipientKnownAs}}</strong>\n          </div>\n        </td>\n        <td>{{message.messageSent | timeago}}</td>\n        <td>\n          <button class=\"btn btn-danger\" (click)=\"$event.stopPropagation()\" (click)=\"deleteMessage(message.id)\">Delete</button>\n        </td>\n      </tr>\n    </table>\n\n  </div>\n\n</div>\n\n<div class=\"d-flex justify-content-center\">\n    <pagination [boundaryLinks]=\"true\" \n                [totalItems]=\"pagination.totalItems\"\n                [itemsPerPage]=\"pagination.itemsPerPage\"\n                [(ngModel)]=\"pagination.currentPage\"\n                (pageChanged)=\"pageChanged($event)\"\n              previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n  </pagination>\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n  photoUrl: string;\n\n  constructor(public authService: AuthService, private alertify: AlertifyService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  login(){\n    this.authService.login(this.model).subscribe(next => {\n      this.alertify.success('Logged in Successfully');\n    }, error => {\n      this.alertify.error(error);\n    }, () => {\n      this.router.navigate(['/members']);\n    });\n  }\n\n  loggedIn(){\n   return this.authService.loggedIn();\n  }\n\n  logout(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authService.decodedToken = null;\n    this.authService.currentUser = null;\n    this.alertify.message('logged out');\n    this.router.navigate(['/home']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/home']\">Dating App</a>\n  \n  <ul *ngIf=\"loggedIn()\" class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['/members']\">Matches</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['/lists']\">Lists</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link \" [routerLink]=\"['/messages']\">Messages</a>\n      </li>\n  </ul>\n   \n  <div *ngIf=\"loggedIn()\" class=\"dropdown\" dropdown>\n    <span class=\"mr-1\">\n      <img src=\"{{photoUrl || '../../../../assets/user.png'}}\" alt=\"\">\n    </span>\n    <a class=\" dropdown-toggle text-light\" dropdownToggle>\n      Welcome {{authService.decodedToken?.unique_name | titlecase}}\n    </a>\n  \n    <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n      <a class=\"dropdown-item\" [routerLink]=\"['/member/edit']\"><i class=\"fa fa-user\"></i> Edit Profile</a>\n      <div class=\"dropdown-divider\"></div>\n      <a class=\"dropdown-item\" (click)=\"logout()\">\n        <i class=\"fa fa-sign-out\"></i> Logout</a>\n    </div>\n  </div>\n\n    <form *ngIf=\"!loggedIn()\" #loginForm=\"ngForm\" class=\"form-inline my-2 my-lg-0\" (ngSubmit)=\"login()\">\n      <input class=\"form-control mr-sm-2\" type=\"text\" name=\"username\" \n      placeholder=\"Username\" required [(ngModel)]=\"model.Username\">\n      <input class=\"form-control mr-sm-2\" type=\"password\" name=\"password\" \n       placeholder=\"Password\" required [(ngModel)]=\"model.password\">\n      <button [disabled]=\"!loginForm.valid\" class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\n    </form>\n \n  </div>\n  \n</nav>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker/public_api';\nimport { User } from '../_models/user';\nimport { error } from '@angular/compiler/src/util';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  user: User;\n  registerForm: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(private authService: AuthService, private alertify: AlertifyService, private router: Router,\n              private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.bsConfig = {\n      containerClass: 'theme-red'\n    },\n   this.createRegisterForm();\n   }\n\n   createRegisterForm() {\n     this.registerForm = this.fb.group({\n       gender: ['male'],\n       username: ['', Validators.required],\n       knownAs: ['', Validators.required],\n       dateOfBirth: [null, Validators.required],\n       city: ['', Validators.required],\n       country: ['', Validators.required],\n       password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n       confirmPassword: ['', Validators.required]\n     }, {validators: this.passwordMatchValidator});\n   }\n\n   passwordMatchValidator(g: FormGroup) {\n     return g.get('password').value === g.get('confirmPassword').value ? null : {mismatch: true};\n   }\n\n  register(){\n    if (this.registerForm.valid) {\n       this.user = Object.assign({}, this.registerForm.value);\n       this.authService.register(this.user).subscribe(() => {\n         this.alertify.success('Registration Successfull!');\n       // tslint:disable-next-line: no-shadowed-variable\n       }, error => {\n         this.alertify.error(error);\n       }, () => {\n         this.authService.login(this.user).subscribe(() => {\n           this.router.navigate(['/members']);\n         });\n       });\n    }\n  }\n\n  cancel(){\n    this.cancelRegister.emit(false);\n  }\n\n}\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\n <hr>\n\n <div class=\"form-group\">\n    <label class=\"control-label\" style=\"margin-right:10px\">I am a: </label>\n    <label class=\"radio-inline\">\n      <input class=\"mr-3\" type=\"radio\" value=\"male\" formControlName=\"gender\">Male\n   </label>\n    <label class=\"radio-inline ml-3\">\n     <input class=\"mr-3\" type=\"radio\" value=\"female\" formControlName=\"gender\">Female\n    </label>\n </div>\n\n  <div class=\"form-group\">\n    <input type=\"text\"\n    [ngClass]=\"{'is-invalid': registerForm.get('username').errors  && registerForm.get('username').touched}\" \n    class=\"form-control\" formControlName=\"username\" placeholder=\"Username\">\n  <div class=\"invalid-feedback\">Please choose a Username</div> \n  </div>\n\n  <div class=\"form-group\">\n     <input [ngClass]=\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\" class=\"form-control\"\n       placeholder=\"Known as\" formControlName=\"knownAs\">\n     <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\">Known as is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\" class=\"form-control\"\n      placeholder=\"Date of Birth\" formControlName=\"dateOfBirth\" type=\"text\" bsDatepicker [bsConfig]=\"bsConfig\" >\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\">Date of Birth is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\" class=\"form-control\"\n      placeholder=\"City\" formControlName=\"city\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\">City is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\" class=\"form-control\"\n      placeholder=\"Country\" formControlName=\"country\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\">Country is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input type=\"password\" \n      [ngClass]=\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched}\" \n      class=\"form-control\"formControlName=\"password\" placeholder=\"Password\">\n     \n     <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('required') \n     && registerForm.get('password').touched\">\n     Password is required\n    </div> \n  </div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('minlength') \n        && registerForm.get('password').touched\">\n        Password must be at least 4 characters\n    </div> \n  \n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('maxlength') \n       && registerForm.get('password').touched\">\n       Password cannot exceed 8 characters\n    </div> \n  \n\n  <div class=\"form-group\">\n    <input type=\"password\" \n      ngClass=\"{'is-invalid': registerForm.get('confirmPassword').errors \n        && registerForm.get('confirmPassword').touched\n        || registerForm.get('confirmPassword').touched\n        && registerForm.hasError('mismatch')}\" \n    class=\"form-control\" formControlName=\"confirmPassword\" \n    placeholder=\"confirm Password\">\n    <div class=\"invalid-feedback\" \n       *ngIf=\"registerForm.get('confirmPassword').hasError('required') \n        && registerForm.get('confirmPassword').touched\">\n        Password is required\n   </div> \n     <div class=\"invalid-feedback\" \n      *ngIf=\"registerForm.hasError('mismatch') \n       && registerForm.get('confirmPassword').touched\">\n      Password must match\n     </div>\n   </div>\n\n  <div class=\"form-group text-center\">\n    <button class=\"btn btn-success\" [disabled]=\"!registerForm.valid\" type=\"submit\">Register</button>\n    <button class=\"btn btn-default\" type=\"button\"(click)=\"cancel()\" >Cancel</button>\n  </div>\n</form> \n\n","import {Routes} from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\n\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PrevenUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\n\r\nexport const appRoutes: Routes = [\r\n    { path: '', component: HomeComponent},\r\n    {\r\n        path: '',\r\n        runGuardsAndResolvers: 'always',\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            { path: 'members', component: MemberListComponent,\r\n            resolve: {users: MemberListResolver}},\r\n            { path: 'members/:id', component: MemberDetailComponent,\r\n             resolve: {user: MemberDetailResolver} },\r\n            {path: 'member/edit', component: MemberEditComponent,\r\n                resolve: {user: MemberEditResolver}, canDeactivate: [PrevenUnsavedChanges]},\r\n            { path: 'messages', component: MessagesComponent, resolve: {messages: MessagesResolver}},\r\n            { path: 'lists', component: ListsComponent, resolve: {users: ListsResolver}},\r\n        ]\r\n    },\r\n   { path: '**', redirectTo: '', pathMatch: 'full'},\r\n];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}